@model NewISE.Models.DBModel.CoeffFasciaKmModel

@using NewISE.Models.DBModel;

<script src="~/Scripts/autoNumeric/autoNumeric.min.js"></script>
<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@Scripts.Render("~/bundles/jqueryval")

@{
    IEnumerable<SelectListItem> GruppoFKM = (IEnumerable<SelectListItem>)ViewBag.GruppoFKM;
    string leggeFasciaKM = GruppoFKM.Where(x => x.Selected).FirstOrDefault().Text;
    string idGruppoFKm = GruppoFKM.Where(x => x.Selected).FirstOrDefault().Value;
    IEnumerable<SelectListItem> FasciaKm = (IEnumerable<SelectListItem>)ViewBag.FasciaKM;
    string km = FasciaKm.Where(x => x.Selected).FirstOrDefault().Text;
    string id_DefKm = FasciaKm.Where(x => x.Selected).FirstOrDefault().Value;
    bool escludiAnnullati = (bool)ViewBag.escludiAnnullati;
    var errori = ViewData.ModelState;
}

@using (Ajax.BeginForm("InserisciCoeffFasciaKm", "ParamCoeffFasciaKm", new { id_DefKm = id_DefKm, idGruppoFKm = idGruppoFKm }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPViewParametri", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formNuovoCoeffFasciaKm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" id="escludiAnnullati" name="escludiAnnullati" value="@escludiAnnullati.ToString()" />
        <input type="hidden" id="aggiornaTutto" name="aggiornaTutto" />

        <div class="form-group">
            <div class="col-xs-2 text-right">
                <label>Legge Fascia KM</label>
            </div>
            <div class="col-md-10">
                <div class="panel panel-default">
                    <label style="padding-left:5px; padding-top:5px; font-weight: bold;">@leggeFasciaKM.ToString()</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-2 text-right">
                <label>Km</label>
            </div>
            <div class="col-md-10">
                <div class="panel panel-default">
                    <label style="padding-left:5px; padding-top:5px; font-weight: bold;">@km.ToString()</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Data Variazione", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.dataInizioValidita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })
            </div>
            <div id="divChkAgg" class="col-xs-5">
                <div style="display:inline-block;">
                    <input type="checkbox" id="aggiornaTuttoX" name="aggiornaTuttoX" onclick="AggiornaTutto()" />
                </div>
                <div style="vertical-align:middle; display:inline-block;">
                    <label>Aggiorna tutto</label>
                </div>
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.coefficienteKm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <input type="text" id="coefficienteKmUI" class="form-control ignore" />
                <input type="hidden" id="coefficienteKm" name="coefficienteKm" />

                @Html.ValidationMessageFor(model => model.coefficienteKm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Inserisci" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-offset-2 col-xs-10">
        <a href="#" onclick="TornaElencoIb();">Torna all'elenco dei Parameteri Fascia Km.</a>
    </div>
</div>

<script type="text/javascript">

     @foreach(var e in errori)
    {
        if(e.Value.Errors.Count>0)
        {
            @:DialogModalError('True');
                            break;
        }
    }


    function DialogModalError(err) {
        //debugger;
        if (err == 'True') {
            $('#myModalErrorModel').modal('toggle');
        }
    }

    Globalize.culture("it-IT");

    anElement = new AutoNumeric('#coefficienteKmUI', autoNumericOptionsEuroTreDec);

    $("#coefficienteKmUI").blur(function () {
        //debugger;
        var val = anElement.getNumber();
        $("#coefficienteKm").val(val.toString().replace(".", ","));
    });



    $.validator.methods.number = function (value, element) {
        //debugger;
        return this.optional(element) || !isNaN(Globalize.parseFloat(value));
    };

    $.validator.setDefaults({
        ignore: ".ignore"
    });


    $('#dataInizioValidita').datepicker({
        inline: true,
        changeMonth: true,
        changeYear: true,
    });
    $('#dataFineValidita').datepicker({
        inline: true,
        changeMonth: true,
        changeYear: true,
    });

    $('#dataAggiornamento').datepicker({
        inline: true,
        changeMonth: true,
        changeYear: true,
    });

    function AggiornaTutto() {

        var chk = false;
        if ($("#aggiornaTuttoX").is(":checked")) {
            chk = true;
        }
        $("#aggiornaTutto").val(chk);
    }


    function TornaElencoIb() {
        rotta = "/Parametri/ParamCoeffFasciaKm/CoefficienteFasciaKmLivello";

        var idFKm = parseFloat('@id_DefKm');
        idGruppoFKm = parseFloat('@idGruppoFKm');

        var chk = false;
        if ($("#escludiAnnullati").is(":checked")) {
            chk = true;
        }


        $.ajax({
            type: "POST",
            url: rotta,
            data: { idGruppoFKm: idGruppoFKm, idFKm: idFKm, escludiAnnullati: chk },
            dataType: 'html',
            beforeSend: function () {
                //debugger;
                //VerificaAutenticazione();
                //$("#DialogNewDoc").dialog("destroy");
                //$("#divEffettoLoadAutNoDoc").show("slow");
            },
            success: function (result) {
                //debugger;
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                $("#divPViewParametri").empty();
                $("#divPViewParametri").html(result);

                //RicercaDocumenti();

            },
            complete: function () {
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                //                $("#Centro").getNiceScroll().resize();
            },
            error: function (jqXHR, textStatus, errorThrow) {
                //debugger;
                var msg = errorThrow.err;
                AlertDialog(msg);
            }

        });

    }
</script>
