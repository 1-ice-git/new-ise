@model NewISE.Areas.Parametri.Models.PercentualeDisagioModel
@using NewISE.Areas.Parametri.Models;
@*@{
    UfficiModel lm = (UfficiModel)ViewBag.DescrizioneUfficio;
}*@

@Scripts.Render("~/bundles/jqueryval")


@{

    //UfficiModel lm = (UfficiModel)ViewBag.DescrizioneUfficio;
    //string descrizioneUfficio = lm.descrizioneUfficio;
    //bool escludiAnnullati = (bool)ViewBag.escludiAnnullati;
    //decimal idUfficio = lm.idUfficio;

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PERCENTUALEDISAGIO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idPercentualeDisagio)

        <div class="form-group">
            @Html.LabelFor(model => model.idUfficio, "IDUFFICIO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("IDUFFICIO", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idUfficio, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataInizioValidita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataInizioValidita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataFineValidita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataFineValidita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataFineValidita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.percentuale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.percentuale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.percentuale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.annullato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.annullato)
                    @Html.ValidationMessageFor(model => model.annullato, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
