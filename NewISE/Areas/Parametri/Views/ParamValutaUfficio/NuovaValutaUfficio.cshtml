@model NewISE.Models.DBModel.ValutaUfficioModel
@using NewISE.Models.DBModel;

<script src="~/Scripts/autoNumeric/autoNumeric.min.js"></script>
<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@Scripts.Render("~/bundles/jqueryval")

@{

    //ValuteModel lm = (ValuteModel)ViewBag.Valuta;
    //string descrizioneValue = lm.descrizioneValuta;
    bool escludiAnnullati = (bool)ViewBag.escludiAnnullati;
    //decimal idValuta = lm.idValuta;
    //UfficiModel lm1 = (UfficiModel)ViewBag.Ufficio;
    //string descrizioneUfficio = lm1.descUfficio;
    //decimal idUfficio= lm1.idUfficio;

    IEnumerable<SelectListItem> GruppoValute = (IEnumerable<SelectListItem>)ViewBag.ValutaList;
    string idValuta = GruppoValute.Where(x => x.Selected).FirstOrDefault().Value;
    string descrizioneValue = GruppoValute.Where(x => x.Selected).FirstOrDefault().Text;

    IEnumerable<SelectListItem> GruppoUffici = (IEnumerable<SelectListItem>)ViewBag.UfficiList;
    string idUfficio = GruppoUffici.Where(x => x.Selected).FirstOrDefault().Value;
    string descrizioneUfficio = GruppoUffici.Where(x => x.Selected).FirstOrDefault().Text;
}

@using (Ajax.BeginForm("InserisciValutaUfficio", "ParamValutaUfficio", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPViewParametri", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formValutaUfficio" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
        @*@Html.HiddenFor(model => model.idValuta)*@
        @Html.HiddenFor(model => model.idUfficio)

        <input type="hidden" id="escludiAnnullati" , name="escludiAnnullati" value="@escludiAnnullati.ToString()" />
        <input type="hidden" id="aggiornaTutto" , name="aggiornaTutto" />
        <div class="form-group">
            <div class="row">
                <div class="col-xs-2 text-right">
                    <label>Ufficio </label>
                </div>
                <div class="col-xs-5">
                    <div class="panel panel-default">
                        <label style="padding-left:5px; padding-top:5px; font:bold;">@descrizioneUfficio.ToString()</label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-2 text-right">
                    <label>Seleziona Valuta</label>
                </div>
                <div class="col-xs-5">
                    @Html.DropDownList("idValuta", ViewBag.ValutaList as IEnumerable<SelectListItem>,
                     new { @class = "form-control select2 select2-select" })
                </div>
            </div><br />
            <div class="row">
                @Html.Label("Data Variazione", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.dataInizioValidita, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })
                </div>
                <div id="divChkAgg" class="col-xs-5">
                    <div style="display:inline-block;">
                        <input type="checkbox" id="aggiornaTuttoX" name="aggiornaTuttoX" onclick="AggiornaTutto()" />
                    </div>
                    <div style="vertical-align:middle; display:inline-block;">
                        <label>Aggiorna tutto</label>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Inserisci" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-offset-2 col-xs-10">
        <a href="#" onclick="TornaElencoIb();">Torna all'elenco delle Valute Ufficio</a>
    </div>
</div>

<script type="text/javascript">
    Globalize.culture("it-IT");



    $.validator.methods.number = function (value, element) {
        //debugger;
        return this.optional(element) || !isNaN(Globalize.parseFloat(value));
    };

    $('#dataInizioValidita').datepicker({
        inline: true,
        changeMonth: true,
        changeYear: true,
    });
    $('#dataFineValidita').datepicker({
        inline: true,
        changeMonth: true,
        changeYear: true,
    });

    function AggiornaTutto() {

        var chk = false;
        if ($("#aggiornaTuttoX").is(":checked")) {
            chk = true;
        }
        $("#aggiornaTutto").val(chk);
    }
    $("#idValuta").select2({
        placeholder: "Seleziona Descrizione Valuta",
        allowClear: true,
        language: "it",
        width: '150'

    });

    function TornaElencoIb() {
        rotta = "/Parametri/ParamValutaUfficio/ValutaUfficioLivello";

        var idValuta = parseFloat('@idValuta');
        var idUfficio = parseFloat('@idUfficio');


        if (isNaN(idValuta)) {
            $("#divPViewParametri").empty();
            return false;
        }

        if (isNaN(idUfficio)) {
            $("#divPViewParametri").empty();
            return false;
        }

        var chk = false;
        if ($("#escludiAnnullati").is(":checked")) {
            chk = true;
        }

        $.ajax({
            type: "POST",
            url: rotta,
            data: { idValuta: idValuta, idUfficio: idUfficio, escludiAnnullati: chk },
            dataType: 'html',
            beforeSend: function () {
                //debugger;
                //VerificaAutenticazione();
                //$("#DialogNewDoc").dialog("destroy");
                //$("#divEffettoLoadAutNoDoc").show("slow");
            },
            success: function (result) {
                //debugger;
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                $("#divPViewParametri").empty();
                $("#divPViewParametri").html(result);

                //RicercaDocumenti();

            },
            complete: function () {
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                //                $("#Centro").getNiceScroll().resize();
            },
            error: function (jqXHR, textStatus, errorThrow) {
                //debugger;
                var msg = errorThrow.err;
                AlertDialog(msg);
            }

        });
    }
</script>
