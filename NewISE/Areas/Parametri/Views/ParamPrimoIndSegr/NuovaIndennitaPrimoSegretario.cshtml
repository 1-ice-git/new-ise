@model NewISE.Models.DBModel.IndennitaPrimoSegretModel
@using NewISE.Models.DBModel;

<script src="~/Scripts/autoNumeric/autoNumeric-min.js"></script>
<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@Scripts.Render("~/bundles/jqueryval")

@{

    IndennitaPrimoSegretModel lm = (IndennitaPrimoSegretModel)ViewBag.idIndPrimoSegr;
    decimal descrizioneprimosegr = lm.idIndPrimoSegr;
    bool escludiAnnullati = (bool)ViewBag.escludiAnnullati;
    decimal idIndPrimoSegr = lm.idIndPrimoSegr;

}

@using (Ajax.BeginForm("InserisciIndennitaPrimoSegretario", "ParamPrimoIndSegr", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPViewParametri" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="row">
            <div class="col-xs-offset-2 col-xs-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.idIndPrimoSegr)
        <input type="hidden" id="escludiAnnullati" , name="escludiAnnullati" value="@escludiAnnullati" />

        <div class="form-group">
            <div class="col-xs-2 text-right">
                <label>Indennità primo Segretario </label>
            </div>
            <div class="col-xs-10">
                <div class="panel panel-default">
                    <label style="padding-left:5px; padding-top:5px; font:bold;">@descrizioneprimosegr</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataInizioValidita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataInizioValidita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataFineValidita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataFineValidita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataFineValidita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.indennita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.indennita, new { htmlAttributes = new { @class = "form-control number" } })
                @Html.ValidationMessageFor(model => model.indennita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Inserisci" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-offset-2 col-xs-10">
        <a href="#" onclick="TornaElencoIb();">Torna all'elenco delle indennità di primo segretario .</a>
    </div>
</div>

<script type="text/javascript">
    Globalize.culture("it-IT");

    $("#indennita").autoNumeric('init',
	{
	    aSep: '.',
	    aDec: ',',
	    aSign: ''
	});

    $('form').submit(function () {
        //debugger;
        var form = $(this);
        $('input.number').each(function (i) {
            //debugger;
            var self = $(this);
            try {
                var v = self.autoNumeric('get');
                //self.autoNumeric('destroy');
                var n = v.replace(".", ",");
                self.val(n);
            } catch (err) {
                console.log("Non è un campo autonumeric: " + self.attr("name"));
            }
        });
        return true;
    });

    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    };

    $.validator.methods.number = function (value, element) {
        //debugger;
        return this.optional(element) || !isNaN(Globalize.parseFloat(value));
    };

    $('#dataInizioValidita').datepicker({
        inline: true,
    });
    $('#dataFineValidita').datepicker({
        inline: true,
    });

    function TornaElencoIb() {
        rotta = "/Parametri/ParamPrimoIndSegr/IndennitaPrimoSegretarioLivello";
        
        var idIndPrimoSegr = parseFloat('@idIndPrimoSegr');
        var chk = true;

        if (isNaN(idIndPrimoSegr)) {
            $("#divPViewParametri").empty();
            return false;
        }

        if ('@escludiAnnullati' == 'true') {
            chk = false;
        }

        $.ajax({
            type: "POST",
            url: rotta,
            data: { idIndPrimoSegr: idIndPrimoSegr, escludiAnnullati: chk },
            dataType: 'html',
            beforeSend: function () {
                //debugger;
                //VerificaAutenticazione();
                //$("#DialogNewDoc").dialog("destroy");
                //$("#divEffettoLoadAutNoDoc").show("slow");
            },
            success: function (result) {
                //debugger;
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                $("#divPViewParametri").empty();
                $("#divPViewParametri").html(result);

                //RicercaDocumenti();

            },
            complete: function () {
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                //                $("#Centro").getNiceScroll().resize();
            },
            error: function (jqXHR, textStatus, errorThrow) {
                //debugger;
                var msg = errorThrow.err;
                AlertDialog(msg);
            }

        });
    }
</script>
