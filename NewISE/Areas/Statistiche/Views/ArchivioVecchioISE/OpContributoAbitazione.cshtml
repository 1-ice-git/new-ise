@model IEnumerable<NewISE.Areas.Statistiche.Models.Stp_Op_Contributo_Abitazione>
<br />

@using (Ajax.BeginForm("Index", "ArchivioVecchioISE", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divPViewParametri", OnComplete="pippo()" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            <hr />

            <div class="col-md-2">
                @Html.TextBox("Data da inserire", null, new { @class = "form-control datepicker", @id = "datepicker", @placeholder = "Seleziona una data", @value = DateTime.Now.ToString("dd/MM/yyyy") })
            </div>

            <div class="col-md-2">
                @Html.TextBox("Data da inserire", null, new { @class = "form-control datepicker", @id = "datepicker1", @placeholder = "Seleziona una data", @value = DateTime.Now.ToString("dd/MM/yyyy") })
            </div>


        </div>
        <br />

    </div>
}

<div class="form-group">
    <div class="col-md-3">
        <a href="#" onclick="OpContributoAbitazione()">Visualizza il Riepilogo delle Operazioni effettuate - Contributo Abitazione </a>
    </div>
    <div class="col-md-3">
        <a href="#" target="_blank" onclick="invia()">Stampa Riepilogo delle Operazioni effettuate - Contributo Abitazione </a>
    </div>
    <div class="col-md-3">
        <a href="#" onclick="TornaElenco();">Torna all'elenco delle Tabelle </a>
    </div>
</div>

<br /><br />
<table id="tb_Stp_Op_Contributo_Abitazione" class="display" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.matricola)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nominativo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sede)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.valuta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_decorrenza)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_lettera)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_operazione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.contributo_valuta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.contributo_L_E)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.canone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.percentuale_applicata)
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.matricola)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nominativo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sede)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.valuta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_decorrenza)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_lettera)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_operazione)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.contributo_valuta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.contributo_L_E)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.canone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.percentuale_applicata)
                </td>
            </tr>
        }
    </tbody>
</table>
<div style="clear: both"></div>



<script type="text/javascript">
    $('#tb_Stp_Op_Contributo_Abitazione').DataTable({
            "order": [],
            "scrollY": 220,
            "scrollX": true,
            "language": {
                "sEmptyTable": "Nessun dato presente nella tabella",
                "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "Visualizza _MENU_ elementi",
                "sLoadingRecords": "Caricamento...",
                "sProcessing": "Elaborazione...",
                "sSearch": "Cerca:",
                "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                "oPaginate": {
                    "sFirst": "Inizio",
                    "sPrevious": "Precedente",
                    "sNext": "Successivo",
                    "sLast": "Fine"
                },
                "oAria": {
                    "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                    "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                }

            }
        });


        function invia() {
            //debugger
            var DATA = $("#datepicker").datepicker().val()
            var DATA1 = $("#datepicker1").datepicker().val()

            window.location.href = "/Statistiche/ArchivioVecchioISE/RptOpContributoAbitazione?V_DATA=" + DATA + "&V_DATA1=" + DATA1;
        };

        /* Custom filtering function which will search data in column four between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data_operazione, dataIndex) {
                var min = parseInt($('#min').val(), 10);
                var max = parseInt($('#max').val(), 10);
                var data_operazione = parseFloat(data_operazione[6]) || 0; // use data for the age column

                if ((isNaN(min) && isNaN(max)) ||
                     (isNaN(min) && data_operazione <= max) ||
                     (min <= data_operazione && isNaN(max)) ||
                     (min <= data_operazione && data_operazione <= max)) {
                    return true;
                }
                return false;
            }
        );

        $(document).ready(function () {
            var table = $('#tb_Stp_Op_Contributo_Abitazione').DataTable();

            // Event listener to the two range filtering inputs to redraw on input
            $('#min, #max').keyup(function () {
                table.draw();
            });
        });


        // Calendario con possibilità di cambiare mese e anno
        $(document).ready(function () {
            $(".datepicker").datepicker({

                changeMonth: true,
                changeYear: true,
                yearRange: '2000'
                //dateFormat: 'dd-mm-yy',
                //defaultDate: '01-01-2001'
                //yearRange: "-15:+0",
                //defaultDate: '01/01/01'
            });
        });

        // Calendario con possibilità di cambiare mese e anno
        $(document).ready(function () {
            $(".datepicker1").datepicker({

                changeMonth: true,
                changeYear: true,
                yearRange: '2000'
                //dateFormat: 'dd-mm-yy',
                //defaultDate: '01-01-2001'
                //yearRange: "-15:+0",
                //defaultDate: '01/01/01'
            });
        });

        function pippo() {
            alert("fiundi");
        }

        function OpContributoAbitazione() {
            //debugger;

            rotta = "/Statistiche/ArchivioVecchioISE/OpContributoAbitazione";

            var data = $("#datepicker").datepicker().val()
            var data1 = $("#datepicker1").datepicker().val()

            var chk = true;

            //$("#codicedipendente").val = idMatricola;

            //if (isNaN(codicequalifica)) {
            //    $("#divPViewParametri").empty();
            //    return false;
            //}

            //if (isNaN(null)) {
            //    alert("null is not a number");
            //} else {
            //    alert("i think null is a number");
            //}

            $.ajax({
                type: "POST",
                url: rotta,
                data: {
                    V_DATA: data,
                    V_DATA1: data1
                },
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    $("#divPViewParametri").empty();
                    //VerificaAutenticazione();
                    //$("#DialogNewDoc").dialog("destroy");
                    //$("#divEffettoLoadAutNoDoc").show("slow");
                },
                success: function (result) {
                    //debugger;
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //$("#divPViewParametri").empty();
                    $("#divPViewParametri").html(result);

                    //RicercaDocumenti();

                },
                complete: function () {
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //                $("#Centro").getNiceScroll().resize();
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });

        }

        function TornaElenco() {
            //debugger;
            rotta = "/Statistiche/ArchivioVecchioISE/Index";

            //if (isNaN()) {
            //    $("#divPViewParametri").empty();
            //    return false;
            //}

            $.ajax({
                type: "POST",
                url: rotta,
                //data: {
                //},
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    //VerificaAutenticazione();
                    //$("#DialogNewDoc").dialog("destroy");
                    //$("#divEffettoLoadAutNoDoc").show("slow");
                },
                success: function (result) {
                    //debugger;
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //$("#divPViewParametri").empty();
                    //$("#divPViewParametri").html(result);

                    window.location.href = rotta;

                    //RicercaDocumenti();

                },
                complete: function () {
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //                $("#Centro").getNiceScroll().resize();
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });
        }
</script>



