@model IEnumerable<NewISE.Areas.Statistiche.Models.Stp_Consuntivo_dei_costi_per_codice_Coan>

<div class="form-horizontal">
    <div class="form-group">
        <hr />

        <div class="col-md-2">
            @Html.Editor("Dal", new { htmlAttributes = new { @class = "form-control", @value = DateTime.Now.ToString("dd/MM/yyyy"), @placeholder = DateTime.Now.ToString("dd/MM/yyyy") } })
            @Html.ValidationMessage("Formato Data non corretto", "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.Editor("Dal", new { htmlAttributes = new { @class = "form-control", placeholder = "dd/mm/yyyy" } })
            @Html.ValidationMessage("Formato Data non corretto", "", new { @class = "text-danger" })
        </div>
        <div class="select2-container select2-container--classic">
            @Html.DropDownList("COAN", ViewBag.ListaCodiceCoan as List<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "PrelevaCoan(this.value);", @onclick = "PrelevaCoan(this.value);" })
        </div>

    </div>
    <br />
    <div class="form-group">
        <div class="col-md-3">
            <a href="#" target="_blank" onclick="invia()">Stampa Consuntivo dei Costi per codice Co.An. </a>
        </div>
    </div>

    <hr />
</div>

<table id="tb_Stp_Op_Contributo_Abitazione" class="display" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.matricola)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nominativo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.livello)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ufficio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.descrizione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.valuta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.euro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tipoimporto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.codsede)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.coan)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.matricola)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nominativo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.livello)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ufficio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.descrizione)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.valuta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.euro)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tipoimporto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.codsede)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.coan)
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $('#tb_Stp_Op_Contributo_Abitazione').DataTable({
            "order": [],
            "scrollY": 220,
            "scrollX": true,
            "language": {
                "sEmptyTable": "Nessun dato presente nella tabella",
                "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "Visualizza _MENU_ elementi",
                "sLoadingRecords": "Caricamento...",
                "sProcessing": "Elaborazione...",
                "sSearch": "Cerca:",
                "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                "oPaginate": {
                    "sFirst": "Inizio",
                    "sPrevious": "Precedente",
                    "sNext": "Successivo",
                    "sLast": "Fine"
                },
                "oAria": {
                    "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                    "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                }

            }
        });

        function invia() {
            //debugger
            //var matricola = parseInt($("#MATRICOLA").select2('val'));
            //window.location.href = "/Statistiche/ArchivioVecchioISE/RptStoriaDipendente?matricola=" + matricola;

            window.location.href = "/Statistiche/ArchivioVecchioISE/RptConsuntivoCostiCoAn";
        };

        function PrelevaCoan(codicecoan) {
            debugger;

            rotta = "/Statistiche/ArchivioVecchioISE/ConsuntivoCostiCoAn";

            //var codicequalifica = parseInt($("#COD_QUALIFICA").select2('val'));
            var chk = true;
            //$("#codicedipendente").val = idMatricola;

            //if (isNaN(codicequalifica)) {
            //    $("#divPViewParametri").empty();
            //    return false;
            //}

            //if (isNaN(null)) {
            //    alert("null is not a number");
            //} else {
            //    alert("i think null is a number");
            //}

            $.ajax({
                type: "POST",
                url: rotta,
                data: { codicecoan: codicecoan },
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    $("#divPViewParametri").empty();
                    //VerificaAutenticazione();
                    //$("#DialogNewDoc").dialog("destroy");
                    //$("#divEffettoLoadAutNoDoc").show("slow");
                },
                success: function (result) {
                    //debugger;
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //$("#divPViewParametri").empty();
                    $("#divPViewParametri").html(result);

                    //RicercaDocumenti();

                },
                complete: function () {
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //                $("#Centro").getNiceScroll().resize();
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });

        }

        $("#COAN").select2({
            placeholder: "Seleziona il Gigius ",
            allowClear: true,
            language: "it",
            width: '350'

        });

</script>






