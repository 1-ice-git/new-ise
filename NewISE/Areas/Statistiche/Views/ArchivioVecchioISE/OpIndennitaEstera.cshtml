@model IEnumerable<NewISE.Areas.Statistiche.Models.Stp_Op_Indennita_Estera>


@{
    decimal idAttivazioneMagFam = Convert.ToDecimal(ViewData["idAttivazioneMagFam"]);
    bool solaLettura = Convert.ToBoolean(ViewData["solaLettura"]);
}


<div class="row">
    <div class="col-xs-3">
        <div style="margin-top: 10px; margin-bottom: 10px; margin-left: 10px;">
            <button class="btn btn-default btn-sm" onclick=" DownloadFormulario(); ">
                <i aria-hidden="true" class="fa fa-2x fa-file-text-o"></i>
                Stampa
            </button>

        </div>
    </div>
    <div class="col-xs-2">
        <div style="margin-top: 10px; margin-bottom: 10px;">

            @if (solaLettura)
            {
                <button class="btn btn-default btn-sm disabled" disabled="disabled">
                    <i aria-hidden="true" class="fa fa-2x fa-file-text-o"></i>
                    Stampa
                </button>
            }
            else
            {
                <button class="btn btn-default btn-sm" onclick=" NuovoFormulario(); ">
                    <i aria-hidden="true" class="fa fa-2x fa-file-text-o"></i>
                    Stampa
                </button>
            }

        </div>

    </div>
</div>


<div class="modal fade" id="ModalDownloadFormulario" tabindex="-1" role="dialog" aria-labelledby="ModalDownloadFormularioLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="DownloadFormularioLabel">Operazione Effettuate - Indennità di Sede Estera </h3>
            </div>
            <div class="modal-body modal-lg alert alert-info text-info" style="font-size: 1em;">
                <div id="RptOpIndennitaEstera">
                    @*@Html.Action("RptOpIndennitaEstera", "ArchivioVecchioISE")*@
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalNuovoFormulario" tabindex="-1" role="dialog" aria-labelledby="ModalNuovoFormularioLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="NuovoFormularioLabel">Operazione Effettuate - Indennità di Sede Estera </h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                <div id="divViewNuovoFormulario">
                    @*@Html.Action("RptOpIndennitaEstera", "ArchivioVecchioISE")*@
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>



<div class="form-horizontal">
    <div class="form-group">
        <hr />

        <div class="col-md-2">
            @Html.TextBox("Data da inserire", null, new { @class = "form-control datepicker", @id = "datepicker", @placeholder = "Seleziona una data", @value = DateTime.Now.ToString("dd/MM/yyyy") })
        </div>

        <div class="col-md-2">
            @Html.TextBox("Data da inserire", null, new { @class = "form-control datepicker", @id = "datepicker1", @placeholder = "Seleziona una data", @value = DateTime.Now.ToString("dd/MM/yyyy") })
        </div>
       

    </div>
    <br />

</div>

<div class="form-group">
    <div class="col-md-3">
        <a href="#" target="_blank" onclick="invia()">Stampa Riepilogo delle Operazioni effettuate - Indennità di Sede Estera </a>
    </div>
    <div class="col-md-3">
        <a href="#" onclick="OpIndennitaEstera()">Visualizza il Riepilogo delle Operazioni effettuate - Indennità di Sede Estera </a>

    </div>
    
</div>
<br /><br />
<table id="tb_Op_Indennita_Estera" class="display" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.matricola)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nominativo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.qualifica)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sede)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.valuta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tipo_movimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.codice_tipo_movimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_decorrenza)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_lettera)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_operazione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.indennita_personale)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sist_rientro_lorda)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.anticipo)
            </th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.matricola)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nominativo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.qualifica)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sede)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.valuta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tipo_movimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.codice_tipo_movimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_decorrenza)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_lettera)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_operazione)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.indennita_personale)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sist_rientro_lorda)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.anticipo)
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $('#tb_Op_Indennita_Estera').DataTable({
            "order": [],
            "scrollY": 220,
            "scrollX": true,
            "language": {
                "sEmptyTable": "Nessun dato presente nella tabella",
                "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "Visualizza _MENU_ elementi",
                "sLoadingRecords": "Caricamento...",
                "sProcessing": "Elaborazione...",
                "sSearch": "Cerca:",
                "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                "oPaginate": {
                    "sFirst": "Inizio",
                    "sPrevious": "Precedente",
                    "sNext": "Successivo",
                    "sLast": "Fine"
                },
                "oAria": {
                    "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                    "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                }

            }
        });


    function DownloadFormulario() {
        //debugger
            $('#ModalDownloadFormulario').modal().show();
        }

        function invia() {
            //debugger
            var DATA = $("#datepicker").datepicker().val()
            var DATA1 = $("#datepicker1").datepicker().val()

            window.location.href = "/Statistiche/ArchivioVecchioISE/RptOpIndennitaEstera?V_DATA=" + DATA + "&V_DATA1=" + DATA1;
        };

        /* Custom filtering function which will search data in column four between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data_operazione, dataIndex) {
                var min = parseInt($('#min').val(), 10);
                var max = parseInt($('#max').val(), 10);
                var data_operazione = parseFloat(data_operazione[8]) || 0; // use data for the age column

                if ((isNaN(min) && isNaN(max)) ||
                     (isNaN(min) && data_operazione <= max) ||
                     (min <= data_operazione && isNaN(max)) ||
                     (min <= data_operazione && data_operazione <= max)) {
                    return true;
                }
                return false;
            }
        );

        $(document).ready(function () {
            var table = $('#tb_Op_Indennita_Estera').DataTable();

            // Event listener to the two range filtering inputs to redraw on input
            $('#min, #max').keyup(function () {
                table.draw();
            });
        });

        // Calendario con possibilità di cambiare mese e anno
        $(document).ready(function () {
            $(".datepicker").datepicker({

                changeMonth: true,
                changeYear: true,
                //yearRange: '2001:2010',
                //dateFormat: 'dd-mm-yy',
                //defaultDate: '01-01-2001'
                //yearRange: "-15:+0",
                //defaultDate: '01/01/01'
            });
        });

        // Calendario con possibilità di cambiare mese e anno
        $(document).ready(function () {
            $(".datepicker1").datepicker({

                changeMonth: true,
                changeYear: true,
                //yearRange: '1920:2010',
                //dateFormat: 'dd-mm-yy',
                //defaultDate: '01-01-2001'
                //yearRange: "-15:+0",
                //defaultDate: '01/01/01'
            });
        });

        function OpIndennitaEstera() {
            //debugger;

            rotta = "/Statistiche/ArchivioVecchioISE/OpIndennitaEstera";

            var data = $("#datepicker").datepicker().val()
            var data1 = $("#datepicker1").datepicker().val()

            var chk = true;

            //$("#codicedipendente").val = idMatricola;

            //if (isNaN(codicequalifica)) {
            //    $("#divPViewParametri").empty();
            //    return false;
            //}

            //if (isNaN(null)) {
            //    alert("null is not a number");
            //} else {
            //    alert("i think null is a number");
            //}

            $.ajax({
                type: "POST",
                url: rotta,
                data: {
                    V_DATA: data,
                    V_DATA1: data1
                },
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    $("#divPViewParametri").empty();
                    //VerificaAutenticazione();
                    //$("#DialogNewDoc").dialog("destroy");
                    //$("#divEffettoLoadAutNoDoc").show("slow");
                },
                success: function (result) {
                    //debugger;
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //$("#divPViewParametri").empty();
                    $("#divPViewParametri").html(result);

                    //RicercaDocumenti();

                },
                complete: function () {
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //                $("#Centro").getNiceScroll().resize();
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });

        }

        function RptOpIndennitaEstera() {
            //debugger;

            rotta = "/Statistiche/ArchivioVecchioISE/RptOpIndennitaEstera";

            var data = $("#datepicker").datepicker().val()
            var data1 = $("#datepicker1").datepicker().val()

            var chk = true;

            //$("#codicedipendente").val = idMatricola;

            //if (isNaN(codicequalifica)) {
            //    $("#divPViewParametri").empty();
            //    return false;
            //}

            //if (isNaN(null)) {
            //    alert("null is not a number");
            //} else {
            //    alert("i think null is a number");
            //}

            $.ajax({
                type: "POST",
                url: rotta,
                data: {
                    V_DATA: data,
                    V_DATA1: data1
                },
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    $("#divPViewParametri").empty();
                    //VerificaAutenticazione();
                    //$("#DialogNewDoc").dialog("destroy");
                    //$("#divEffettoLoadAutNoDoc").show("slow");
                },
                success: function (result) {
                    //debugger;
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //$("#divPViewParametri").empty();
                    $("#divPViewParametri").html(result);
                    
                    //RicercaDocumenti();

                },
                complete: function () {
                    //$("#divEffettoLoadAutNoDoc").hide("slow");
                    //                $("#Centro").getNiceScroll().resize();
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });

        }


        $("#ModalNuovoFormulario").on("hidden.bs.modal", function () {
            //debugger;
            RptOpIndennitaEstera();
        });
            
</script>


