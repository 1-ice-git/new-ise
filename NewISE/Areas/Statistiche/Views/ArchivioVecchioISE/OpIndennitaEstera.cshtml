@model IEnumerable<NewISE.Areas.Statistiche.Models.Stp_Op_Indennita_Estera>


<div class="form-horizontal">
    <div class="form-group">
        <hr />

        <div class="col-md-2">
            @Html.TextBox("Data dal", null, new { @class = "form-control datepicker", @id = "datepicker", @placeholder = "Seleziona una data", @onchange = "PrelevaGigius(this.value);" })
        </div>
        <div class="col-md-2">
            @Html.TextBox("Data al", null, new { @class = "form-control datepicker", @id = "datepicker1", @placeholder = "Seleziona una data", @onchange = "PrelevaGigius(this.value);" })
        </div>
       

    </div>
    <br />


    <div class="form-group">
        <div class="col-md-3">
            <a href="#" target="_blank" onclick="invia()">Stampa Dipendenti all' Estero per Livello </a>
        </div>
    </div>

    <hr />
</div>

<a href="#" target="_blank" onclick="invia()">Stampa Riepilogo delle Operazioni effettuate - Indennità di Sede Estera </a>
<br /><br>
<table id="tb_Op_Indennita_Estera" class="display" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.matricola)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nominativo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.qualifica)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sede)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.valuta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tipo_movimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.codice_tipo_movimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_decorrenza)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_lettera)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.data_operazione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.indennita_personale)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sist_rientro_lorda)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.anticipo)
            </th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.matricola)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nominativo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.qualifica)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sede)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.valuta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tipo_movimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.codice_tipo_movimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_decorrenza)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_lettera)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.data_operazione)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.indennita_personale)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sist_rientro_lorda)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.anticipo)
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $('#tb_Op_Indennita_Estera').DataTable({
            "order": [],
            "scrollY": 220,
            "scrollX": true,
            "language": {
                "sEmptyTable": "Nessun dato presente nella tabella",
                "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "Visualizza _MENU_ elementi",
                "sLoadingRecords": "Caricamento...",
                "sProcessing": "Elaborazione...",
                "sSearch": "Cerca:",
                "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                "oPaginate": {
                    "sFirst": "Inizio",
                    "sPrevious": "Precedente",
                    "sNext": "Successivo",
                    "sLast": "Fine"
                },
                "oAria": {
                    "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                    "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                }

            }
        });

        function invia() {
            debugger
            //var matricola = parseInt($("#MATRICOLA").select2('val'));
            //window.location.href = "/Statistiche/ArchivioVecchioISE/RptStoriaDipendente?matricola=" + matricola;
            window.location.href = "/Statistiche/ArchivioVecchioISE/RptOpIndennitaEstera";

            //RptOpIndennitaEstera
        };

        /* Custom filtering function which will search data in column four between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data_operazione, dataIndex) {
                var min = parseInt($('#min').val(), 10);
                var max = parseInt($('#max').val(), 10);
                var data_operazione = parseFloat(data_operazione[8]) || 0; // use data for the age column

                if ((isNaN(min) && isNaN(max)) ||
                     (isNaN(min) && data_operazione <= max) ||
                     (min <= data_operazione && isNaN(max)) ||
                     (min <= data_operazione && data_operazione <= max)) {
                    return true;
                }
                return false;
            }
        );

        $(document).ready(function () {
            var table = $('#tb_Op_Indennita_Estera').DataTable();

            // Event listener to the two range filtering inputs to redraw on input
            $('#min, #max').keyup(function () {
                table.draw();
            });
        });


        function PrelevaGigius() {
            debugger;

            rotta = "/Statistiche/ArchivioVecchioISE/Dislocazione";

            
            var data = $("#datepicker").val();
            var data1 = $("#datepicker1").val();

            var chk = true;

            $.ajax({
                type: "POST",
                url: rotta,
                data: {
                    
                    
                    V_DATA: data,
                    V_DATA1: data1
                },
                dataType: 'html',
                beforeSend: function () {
                    //debugger;
                    $("#divPViewParametri").empty();
                
                },
                success: function (result) {
                
                    $("#divPViewParametri").html(result);
                },
                complete: function () {
                },
                error: function (jqXHR, textStatus, errorThrow) {
                    //debugger;
                    var msg = errorThrow.err;
                    AlertDialog(msg);
                }

            });

        }
            
</script>


