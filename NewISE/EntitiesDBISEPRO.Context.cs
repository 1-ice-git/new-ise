//------------------------------------------------------------------------------
// <auto-generated>
//     Codice generato da un modello.
//
//     Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//     Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewISE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntitiesDBISE : DbContext
    {
        public EntitiesDBISE()
            : base("name=EntitiesDBISE")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCESSI> ACCESSI { get; set; }
        public virtual DbSet<ALIQUOTECONTRIBUTIVE> ALIQUOTECONTRIBUTIVE { get; set; }
        public virtual DbSet<ALTRIDATIFAM> ALTRIDATIFAM { get; set; }
        public virtual DbSet<ANTICIPI> ANTICIPI { get; set; }
        public virtual DbSet<ATTIVITACRUD> ATTIVITACRUD { get; set; }
        public virtual DbSet<BIGLIETTI> BIGLIETTI { get; set; }
        public virtual DbSet<BIGLIETTI_DOCUMENTI> BIGLIETTI_DOCUMENTI { get; set; }
        public virtual DbSet<COEFFICIENTEFKM> COEFFICIENTEFKM { get; set; }
        public virtual DbSet<COEFFICIENTEINDRICHIAMO> COEFFICIENTEINDRICHIAMO { get; set; }
        public virtual DbSet<COEFFICIENTESEDE> COEFFICIENTESEDE { get; set; }
        public virtual DbSet<CONTABILITA> CONTABILITA { get; set; }
        public virtual DbSet<DATIMAB> DATIMAB { get; set; }
        public virtual DbSet<DEFFASCIACHILOMETRICA> DEFFASCIACHILOMETRICA { get; set; }
        public virtual DbSet<DIPENDENTI> DIPENDENTI { get; set; }
        public virtual DbSet<DOCUMENTI> DOCUMENTI { get; set; }
        public virtual DbSet<ELAB_CONT> ELAB_CONT { get; set; }
        public virtual DbSet<GRUPPIDOCUMENTI> GRUPPIDOCUMENTI { get; set; }
        public virtual DbSet<INDENNITA> INDENNITA { get; set; }
        public virtual DbSet<INDENNITABASE> INDENNITABASE { get; set; }
        public virtual DbSet<INDENNITAPRIMOSEGRETARIO> INDENNITAPRIMOSEGRETARIO { get; set; }
        public virtual DbSet<INDENNITASISTEMAZIONE> INDENNITASISTEMAZIONE { get; set; }
        public virtual DbSet<LIVELLI> LIVELLI { get; set; }
        public virtual DbSet<LIVELLIDIPENDENTI> LIVELLIDIPENDENTI { get; set; }
        public virtual DbSet<LOGATTIVITA> LOGATTIVITA { get; set; }
        public virtual DbSet<MAB_ALIQCONTR> MAB_ALIQCONTR { get; set; }
        public virtual DbSet<MAB_DOC> MAB_DOC { get; set; }
        public virtual DbSet<MAGGIORAZIONEABITAZIONE> MAGGIORAZIONEABITAZIONE { get; set; }
        public virtual DbSet<MAGGIORAZIONECONIUGE> MAGGIORAZIONECONIUGE { get; set; }
        public virtual DbSet<MAGGIORAZIONEFIGLI> MAGGIORAZIONEFIGLI { get; set; }
        public virtual DbSet<MAGGIORAZIONIANNUALI> MAGGIORAZIONIANNUALI { get; set; }
        public virtual DbSet<MAGGIORAZIONIFAMILIARI> MAGGIORAZIONIFAMILIARI { get; set; }
        public virtual DbSet<NORMACALCOLO> NORMACALCOLO { get; set; }
        public virtual DbSet<NOTIFICARICHIESTAMAGFAM> NOTIFICARICHIESTAMAGFAM { get; set; }
        public virtual DbSet<OA> OA { get; set; }
        public virtual DbSet<PARENTELA> PARENTELA { get; set; }
        public virtual DbSet<PASSAPORTI> PASSAPORTI { get; set; }
        public virtual DbSet<PENSIONECONIUGE> PENSIONECONIUGE { get; set; }
        public virtual DbSet<PERCENTUALEDISAGIO> PERCENTUALEDISAGIO { get; set; }
        public virtual DbSet<PERCENTUALEMAB> PERCENTUALEMAB { get; set; }
        public virtual DbSet<PRIMASIST_ALIQCONTR> PRIMASIST_ALIQCONTR { get; set; }
        public virtual DbSet<PRIMASITEMAZIONE> PRIMASITEMAZIONE { get; set; }
        public virtual DbSet<REGOLECALCOLO> REGOLECALCOLO { get; set; }
        public virtual DbSet<RICHIAMO> RICHIAMO { get; set; }
        public virtual DbSet<RIDUZIONI> RIDUZIONI { get; set; }
        public virtual DbSet<RUOLOACCESSO> RUOLOACCESSO { get; set; }
        public virtual DbSet<RUOLOUFFICIO> RUOLOUFFICIO { get; set; }
        public virtual DbSet<SOSPENSIONE> SOSPENSIONE { get; set; }
        public virtual DbSet<STATOTRASFERIMENTO> STATOTRASFERIMENTO { get; set; }
        public virtual DbSet<STIPENDI> STIPENDI { get; set; }
        public virtual DbSet<TEORICI> TEORICI { get; set; }
        public virtual DbSet<TFR> TFR { get; set; }
        public virtual DbSet<TIPOALIQUOTECONTRIBUTIVE> TIPOALIQUOTECONTRIBUTIVE { get; set; }
        public virtual DbSet<TIPODOCUMENTI> TIPODOCUMENTI { get; set; }
        public virtual DbSet<TIPOELABORAZIONE> TIPOELABORAZIONE { get; set; }
        public virtual DbSet<TIPOLIQUIDAZIONE> TIPOLIQUIDAZIONE { get; set; }
        public virtual DbSet<TIPOLOGIACOAN> TIPOLOGIACOAN { get; set; }
        public virtual DbSet<TIPOLOGIACONIUGE> TIPOLOGIACONIUGE { get; set; }
        public virtual DbSet<TIPOLOGIAFIGLIO> TIPOLOGIAFIGLIO { get; set; }
        public virtual DbSet<TIPOMOVIMENTO> TIPOMOVIMENTO { get; set; }
        public virtual DbSet<TIPOREGOLACALCOLO> TIPOREGOLACALCOLO { get; set; }
        public virtual DbSet<TIPOSOSPENSIONE> TIPOSOSPENSIONE { get; set; }
        public virtual DbSet<TIPOTRASFERIMENTO> TIPOTRASFERIMENTO { get; set; }
        public virtual DbSet<TIPOVOCE> TIPOVOCE { get; set; }
        public virtual DbSet<TRASFERIMENTO> TRASFERIMENTO { get; set; }
        public virtual DbSet<TRASPEFFETTIRIEN_COEFFIFKM> TRASPEFFETTIRIEN_COEFFIFKM { get; set; }
        public virtual DbSet<TRASPEFFETTIRIENTRO_DOC> TRASPEFFETTIRIENTRO_DOC { get; set; }
        public virtual DbSet<TRASPEFFETTISIST_DOC> TRASPEFFETTISIST_DOC { get; set; }
        public virtual DbSet<TRASPORTOEFFETTIRIENTRO> TRASPORTOEFFETTIRIENTRO { get; set; }
        public virtual DbSet<TRASPORTOEFFETTISIST> TRASPORTOEFFETTISIST { get; set; }
        public virtual DbSet<UFFICI> UFFICI { get; set; }
        public virtual DbSet<UTENTIAUTORIZZATI> UTENTIAUTORIZZATI { get; set; }
        public virtual DbSet<VALUTAUFFICIO> VALUTAUFFICIO { get; set; }
        public virtual DbSet<VALUTE> VALUTE { get; set; }
        public virtual DbSet<VARIAZIONIRATEMAB> VARIAZIONIRATEMAB { get; set; }
        public virtual DbSet<VOCI> VOCI { get; set; }
    
        public virtual int CALCOLIINDENNITA(Nullable<System.DateTime> v_VDATA, Nullable<decimal> v_VDIP, ObjectParameter iNDBASE, ObjectParameter iNDSERVIZIO, ObjectParameter mAGGIORAZIONECONIUGE, ObjectParameter mAGGIORAZIONEFIGLI, ObjectParameter iNDPERSONALE, ObjectParameter iNDANTSISTLORDA, ObjectParameter iNDSISTLORDA)
        {
            var v_VDATAParameter = v_VDATA.HasValue ?
                new ObjectParameter("V_VDATA", v_VDATA) :
                new ObjectParameter("V_VDATA", typeof(System.DateTime));
    
            var v_VDIPParameter = v_VDIP.HasValue ?
                new ObjectParameter("V_VDIP", v_VDIP) :
                new ObjectParameter("V_VDIP", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CALCOLIINDENNITA", v_VDATAParameter, v_VDIPParameter, iNDBASE, iNDSERVIZIO, mAGGIORAZIONECONIUGE, mAGGIORAZIONEFIGLI, iNDPERSONALE, iNDANTSISTLORDA, iNDSISTLORDA);
        }
    
        public virtual int NETTIZZA_INDENNITA(Nullable<System.DateTime> vDATA, Nullable<decimal> vDIP, Nullable<decimal> vIMPORTO, ObjectParameter aLIQUOTA_PREV, ObjectParameter aLIQUOTA_FISC, ObjectParameter iMPORTO_NETTO)
        {
            var vDATAParameter = vDATA.HasValue ?
                new ObjectParameter("VDATA", vDATA) :
                new ObjectParameter("VDATA", typeof(System.DateTime));
    
            var vDIPParameter = vDIP.HasValue ?
                new ObjectParameter("VDIP", vDIP) :
                new ObjectParameter("VDIP", typeof(decimal));
    
            var vIMPORTOParameter = vIMPORTO.HasValue ?
                new ObjectParameter("VIMPORTO", vIMPORTO) :
                new ObjectParameter("VIMPORTO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NETTIZZA_INDENNITA", vDATAParameter, vDIPParameter, vIMPORTOParameter, aLIQUOTA_PREV, aLIQUOTA_FISC, iMPORTO_NETTO);
        }
    
        public virtual int PROC_IND_BASE(Nullable<System.DateTime> vDATA, Nullable<decimal> vDIP, ObjectParameter rEGOLA_CALCOLO, ObjectParameter lIVELLO, ObjectParameter rESPONSABILE, ObjectParameter pERCENTUALE_RIDUZIONE, ObjectParameter iNDENNITA_BASE_TEORICA, ObjectParameter iNDENNITA_BASE)
        {
            var vDATAParameter = vDATA.HasValue ?
                new ObjectParameter("VDATA", vDATA) :
                new ObjectParameter("VDATA", typeof(System.DateTime));
    
            var vDIPParameter = vDIP.HasValue ?
                new ObjectParameter("VDIP", vDIP) :
                new ObjectParameter("VDIP", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_IND_BASE", vDATAParameter, vDIPParameter, rEGOLA_CALCOLO, lIVELLO, rESPONSABILE, pERCENTUALE_RIDUZIONE, iNDENNITA_BASE_TEORICA, iNDENNITA_BASE);
        }
    
        public virtual int PROC_IND_SERVIZIO(Nullable<System.DateTime> vDATA, Nullable<decimal> vDIP, ObjectParameter rEGOLA_CALCOLO, ObjectParameter uFFICIO, ObjectParameter iNDENNITA_BASE, ObjectParameter cOEFFICIENTE_SEDE, ObjectParameter pERCENTUALE_DISAGIO, ObjectParameter iNDENNITA_SERVIZIO_TEORICA, ObjectParameter pERCENTUALE_RIDUZIONE, ObjectParameter iNDENNITA_SERVIZIO)
        {
            var vDATAParameter = vDATA.HasValue ?
                new ObjectParameter("VDATA", vDATA) :
                new ObjectParameter("VDATA", typeof(System.DateTime));
    
            var vDIPParameter = vDIP.HasValue ?
                new ObjectParameter("VDIP", vDIP) :
                new ObjectParameter("VDIP", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_IND_SERVIZIO", vDATAParameter, vDIPParameter, rEGOLA_CALCOLO, uFFICIO, iNDENNITA_BASE, cOEFFICIENTE_SEDE, pERCENTUALE_DISAGIO, iNDENNITA_SERVIZIO_TEORICA, pERCENTUALE_RIDUZIONE, iNDENNITA_SERVIZIO);
        }
    }
}
