@using NewISE.Models.DBModel
@model IEnumerable<NewISE.Models.ViewModel.ElencoElementiHome>
@{
    ViewBag.Title = "Lista Calendario Evento";
    bool admin = Convert.ToBoolean(ViewBag.Amministratore);
    var errori = ViewData.ModelState;
}
<input type="hidden" id="hAmministratore" value="@admin.ToString()" />
<div style="padding-left: 15px; padding-right: 5px; padding-top: 10px;">
    <table id="tbelencocal" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nominativo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dataInizio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dataScadenza)
                </th>
                <th>                    
                    @Html.DisplayNameFor(model => model.NomeFunzione)                             
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Completato)
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <span class="text-uppercase">@Html.DisplayFor(modelItem => item.Nominativo)</span>
                    </td>                   
                    @if (item.dataInizio.HasValue && item.dataInizio.Value < Convert.ToDateTime("31/12/9999"))
                    {
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.dataInizio)
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;"></td>
                    }
                    @if (item.dataScadenza.HasValue && item.dataScadenza.Value < Convert.ToDateTime("31/12/9999"))
                    {
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.dataScadenza)
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;"></td>
                    }
                    <td>
                        <a href="javascript:void(0);" 
                           class="anchorDetail"
                           data-id="@item.IdFunzioneEvento"><span class="text-uppercase">@Html.DisplayFor(modelItem => item.NomeFunzione)</span></a>
                    </td>
                    <td>
                        <span class="text-uppercase">@Html.DisplayFor(modelItem => item.Completato)</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>

</div> 

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>

<script type="text/javascript">

    $("#tbelencocal").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        }           
    });

    function DialogModalView(err) {
        if (err == 'True') {
            $('#myModalNomeFunzione').modal('toggle');
        }
    }

</script>
@section scripts
{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>

        var TeamDetailPostBackURL = 'Home/DetailsFunzioneEvento';
    $(function () {
        $(".anchorDetail").click(function () {
            debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: TeamDetailPostBackURL,
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                    debugger;
                    $('#myModalContent').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');

                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
        //$("#closebtn").on('click',function(){
        //    $('#myModal').modal('hide');

        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });
    });

    </script>

}  