@using NewISE.Models.DBModel
@model IEnumerable<NewISE.Models.DBModel.DocumentiModel>


@{
    //decimal idTrasferimento = (decimal)ViewData["idTrasferimento"];
    decimal id = (decimal)ViewData["id"];

    decimal tipoDoc = Convert.ToDecimal(ViewData["tipoDoc"]);

    EnumTipoDoc enTipoDoc = (EnumTipoDoc)ViewData["tipoDoc"];

    int nDoc = 0;

    if (Model != null && Model.Any())
    {
        nDoc = Model.Count();
    }

    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);


}


@Html.Hidden("hiEliminaDoc")

<p style="padding-left: 15px;">
    @*@Ajax.ActionLink("Nuovo documento", "NuovoConiuge", "MaggiorazioniFamiliari", new { idTrasferimento = idTrasferimento }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-success", @title = "Inserisci il coniuge" })*@
    <a class="btn btn-success" href="#" onclick="NuovoDocumentoConiuge(@id)">Nuovo documento</a>
</p>
<div style="padding-left: 15px; padding-right: 5px; padding-top: 0px;">
    <table id="tabElencoDoc" cellspacing="0">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.nomeDocumento)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.estensione)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.dataInserimento)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.file)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.nomeDocumento)
                    </td>
                    <td class="text-center" style="width: 10%;">
                        @Html.DisplayFor(modelItem => item.estensione)
                    </td>
                    <td class="text-center" style="width: 10%;">
                        @Html.DisplayFor(modelItem => item.dataInserimento)
                    </td>
                    <td style="text-align: center; width: 10%;">
                        <a href="@Url.RouteUrl("LeggiDocumento", new {id = item.idDocumenti})" onclick="" target="_blank">
                            <img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" />
                        </a>
                    </td>
                    <td class="text-center" style="width: 10%;">
                        <a href="#" onclick="EliminaDoc(@item.idDocumenti)">Elimina</a>
                    </td>
                </tr>
            }
        </tbody>


    </table>
</div>
<p style="padding-left: 15px;">
    @switch (enTipoDoc)
    {
        case EnumTipoDoc.CartaImbarco_Viaggi1:
            break;
        case EnumTipoDoc.TitoloViaggio_Viaggi1:
            break;
        case EnumTipoDoc.PrimaRataMab_MAB2:
            break;
        case EnumTipoDoc.DichiarazioneCostoLocazione_MAB2:
            break;
        case EnumTipoDoc.AttestazioneSpeseAbitazione_MAB2:
            break;
        case EnumTipoDoc.ClausoleContrattoAlloggio_MAB2:
            break;
        case EnumTipoDoc.CopiaContrattoLocazione_MAB2:
            break;
        case EnumTipoDoc.ContributoFissoOmnicomprensivo_TrasportoEffetti3:
            break;
        case EnumTipoDoc.AttestazioneTrasloco_TrasportoEffetti3:
            break;
        case EnumTipoDoc.DocumentoFamiliareConiuge_MaggiorazioniFamiliari4:
            @Ajax.ActionLink("Torna indietro", "ElencoConiuge", "MaggiorazioniFamiliari", new { idTrasferimento = idTrasferimento }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
            break;
        case EnumTipoDoc.DocumentoFamiliareFiglio_MaggiorazioniFamiliari4:
            break;
        case EnumTipoDoc.LetteraTrasferimento_Trasferimento5:
            break;
        case EnumTipoDoc.PassaportiVisti_Viaggi1:
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }

</p>


<div class="modal fade " id="NewDocModal" tabindex="-2" role="dialog" aria-labelledby="NewDocModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="NewnotificaModelLabel">Documenti</h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                <p id="NewViewDocumento">
                    <img src="~/Immagini/Loading/ajax-loader (1).gif" />
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="DelDocModal" tabindex="-2" role="dialog" aria-labelledby="DelDocModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="DelnotificaModelLabel">ATTENZIONE!!!</h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                <p id="DelViewDocumento">
                    Procedere con l'eliminazione del documento?
                </p>
            </div>
            <div class="modal-footer">
                <button id="btEliminaDoc" type="button" class="btn btn-info" onclick="ConfermaEliminaDoc();">Procedere</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    $("#tabElencoDoc").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        },
        "info": false,
        "lengthChange": false,
        "pageLength": 3,
        "searching": false,
        "paging": true,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "width": "150px"
        //    }

        //]
        //dom: 'Bfrtip',
        //buttons: [
        //    {
        //        text: 'Nuovo Coniuge',
        //        className: 'green',
        //        action: function (e, dt, node, config) {
        //            NuovoConiuge();
        //        }
        //    }
        //],
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "visible": false,
        //        "searchable": false
        //    },

        //]
    });

    function EliminaDoc(idDocumento) {
        $('#DelDocModal').modal('show');
        $('#hiEliminaDoc').val(idDocumento);
    }

    function ConfermaEliminaDoc() {
        //debugger;
        var rotta = "/Documenti/EliminaDocumento";
        var idDoc = parseInt($("#hiEliminaDoc").val());

        $.ajax({
            type: "POST",
            url: rotta,
            data: {
                idDocumento: idDoc
            },
            dataType: 'json',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();

            },
            success: function (result) {
                //debugger;
                if (result.errore === "") {
                    $('#DelDocModal').modal('hide');
                } else {
                    ErroreElaborazioneAjax(result.msg);
                }
            },
            complete: function () {

                Sblocca();
            },
            error: function (error) {
                //debugger;
                Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }

        });


    }

    $('#DelDocModal').on('hidden.bs.modal', function(e) {
        //debugger;
        AggiornaElencoDoc();
    });

    $('#NewDocModal').on('hidden.bs.modal', function(e) {
        //debugger;
        AggiornaElencoDoc();
    });


    function AggiornaElencoDoc() {
        var nDocOld = parseInt(@nDoc);
        var newDoc = PrelevaNumeroDocumentiAttuali(@id, @tipoDoc);

        if (newDoc != nDocOld) {
            ElencoDocumenti(@id, @tipoDoc, @idTrasferimento);
        }
    }


    function PrelevaNumeroDocumentiAttuali(id, tipoDoc ) {
        //debugger;
        var rotta = "/Documenti/NumeroDocumentiSalvati";
        var nDoc = 0;
        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { id: id, tipoDoc: tipoDoc },
            dataType: 'json',
            async: false,
            beforeSend: function () {

            },
            success: function (result) {
                //debugger;

                if (result.errore === "") {
                    nDoc = parseInt(result.nDoc);
                } else {
                    ErroreElaborazioneAjax(result.errore);
                }
            },
            complete: {


            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

        return nDoc;
    }

    function NuovoDocumentoConiuge(id) {
        //debugger;
        var rotta = "/Documenti/NuovoDocumento";
        var TipoDocumento = parseInt(@tipoDoc);//Equivale a documento familiare (Coniuge)


        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { tipoDoc: TipoDocumento, id: id },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();
                $('#NewDocModal').modal('show');
            },
            success: function (result) {
                //debugger;
                $("#NewViewDocumento").empty();
                $("#NewViewDocumento").html(result);

                var titoloPagina = $("#titoloPagina").val();
                $("#NewnotificaModelLabel").empty();
                $("#NewnotificaModelLabel").html('Documenti ' + titoloPagina);


            },
            complete: {


            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }


</script>