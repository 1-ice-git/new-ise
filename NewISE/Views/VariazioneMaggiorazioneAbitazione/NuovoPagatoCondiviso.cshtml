@model NewISE.Models.ViewModel.PagatoCondivisoMABViewModel


@{
    decimal idMab = Convert.ToDecimal(ViewData["idMab"]);
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
    var errori = ViewData.ModelState;
}

<div style="padding-left:15px; padding-right:10px;">
    @using (@Ajax.BeginForm("InserisciPagatoCondiviso", "VariazioneMaggiorazioneAbitazione", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabAttivitaMAB_var", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { id = "formNewPagatoCondivisoMAB" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("idMab", idMab)
        @Html.Hidden("idTrasferimento", idTrasferimento)

        <div class="form-horizontal">
            <h4>Nuovo Pagato Condiviso M.AB.</h4>
            <hr />

            <div class="row">
                <div class="col-xs-12" style="padding-top:5px; padding-bottom:5px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.testoUltimaOpzioneSelezionata, htmlAttributes: new { @class = "control-label col-xs-2" })
                        <div class="col-xs-2">
                            @Html.TextBoxFor(model => model.testoUltimaOpzioneSelezionata, new { @readonly = "readonly", @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(Model => Model.Condiviso, htmlAttributes: new { @class = "control-label col-xs-2" })
                        <div class="col-xs-1">
                            <span class="text-uppercase">@Html.CheckBoxFor(model => model.Condiviso)</span>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.Pagato, htmlAttributes: new { @class = "control-label col-xs-2" })
                        <div class="col-xs-1">
                            <span class="text-uppercase">@Html.CheckBoxFor(model => model.Pagato)</span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ut_dataInizioValidita, htmlAttributes: new { @class = "control-label col-xs-2" })
                        <div class="col-xs-2">
                            @Html.TextBoxFor(model => model.ut_dataInizioValidita, new { @class = "form-control", @type = "datetime" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(Model => Model.chkAggiornaTutti, htmlAttributes: new { @class = "control-label col-xs-2" })
                        <div class="col-xs-2">
                            <span class="text-uppercase">@Html.CheckBoxFor(model => model.chkAggiornaTutti)</span>
                        </div>
                    </div>

                    <div class="form-group">&nbsp;</div>

                    <div class="form-group">
                        <div class="col-xs-offset-2 col-xs-10">
                            <input type="submit" value="Salva" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="ModalErrorNewPagatoCondivisoMAB" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                        </div>
                        <div class="modal-body alert alert-warning text-warning">
                            <p id="msgModalWarning" class="text-warning">
                                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            </p>
                        </div>
                        <div class="modal-footer">
                            <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div style="padding-left: 15px;">
        @Ajax.ActionLink("Torna indietro", "ElencoPagatoCondivisoMAB", "VariazioneMaggiorazioneAbitazione", new { idMab = idMab, idTrasferimento = idTrasferimento }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabAttivitaMAB_var", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>

<script type="text/javascript">

    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
            break;
        }

    }

    $("#Condiviso").click(function () {
        if ($(this).is(':checked')) {
            $("#Pagato").prop('disabled', false);
        } else {
            $("#Pagato").prop('disabled', true);
            $("#Pagato").prop('checked', false);
        }
    });

    if ($("#Condiviso").is(':checked')) {
        $("#Pagato").prop('disabled', false);
    } else {
        $("#Pagato").prop('disabled', true);
    }

    function DialogModalError(err) {
        //debugger;
        if (err == 'True') {
            $('#ModalErrorNewPagatoCondivisoMAB').modal('toggle');
        }
    }

    $('#formNewPagatoCondivisoMAB').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }
    });

    $('#ut_dataInizioValidita').datepicker({
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });




</script>


