@using NewISE.Models.ViewModel
@using NewISE.Models.DBModel
@using NewISE.Models.Enumeratori

@model IEnumerable<NewISE.Models.DBModel.VariazioneDocumentiModel>

@{
    bool solaLettura = Convert.ToBoolean(ViewData["solaLettura"]);
}

@Html.Hidden("hiIdTipoDocumento", 0)
@Html.Hidden("hIdDocFormularioMAB", 0)

<table class="table" id="tabElencoFormulariMABInseriti_Var">
    <thead>
        <tr>
            <th>
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.progressivo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tipoDocumento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nomeDocumento)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.estensione)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.dataInserimento)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    (@Html.DisplayFor(modelItem => item.IdAttivazione))
                </td>
                @if (item.Modificabile)
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto;font-weight:bold">
                        (@Html.DisplayFor(modelItem => item.progressivo))
                    </td>
                }
                else
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto;font-weight:bold">
                        (@Html.DisplayFor(modelItem => item.progressivo))
                    </td>
                }

                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.DescrizioneTipoDocumento)
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.DescrizioneTipoDocumento)
                    </td>
                }
                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.nomeDocumento)
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.nomeDocumento)
                    </td>
                }
                @if (item.Modificabile)
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.estensione)
                    </td>
                }
                else
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.estensione)
                    </td>
                }


                @if (item.Modificabile)
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.dataInserimento)
                    </td>
                }
                else
                {
                    <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.dataInserimento)
                    </td>
                }

                <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                    <a href="@Url.RouteUrl("LeggiDocumento", new {id = item.idDocumenti})" target="_blank"><img class="SfondoBordoImg" width="17" src="../../Immagini/IconeDocumenti/PDF-icon.png" title="Click per visualizzare il formulario." /></a>
                </td>

                <td class="text-center" style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                    @if (item.Modificabile)
                    {
                        <a href="#" onclick="EliminaFormularioMAB(@item.idDocumenti)" id="linkEliminaFormulario">
                            <img class="SfondoBordoImg" width="17" src="../../Immagini/delete.png" title="Elimina&nbsp;Formulario" />
                        </a>
                    }
                    else
                    {
                        <img class="SfondoBordoImg disabled" width="17" src="../../Immagini/delete_grey.png" />
                    }
                </td>
            </tr>
        }
    </tbody>
</table>



<script type="text/javascript">
    $("#tabElencoFormulariMABInseriti_Var").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        },
        "info": false,
        "lengthChange": false,
        "pageLength": 5,
        "searching": false,
        "paging": true,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        "columnDefs": [
            { "targets": [5], "type": 'date-euro' },
            { "targets": [6, 7], "orderable": false },
            { "targets": [0], "visible": false },
        ],
        "order": [[0, "desc"], [2, "asc"], [5, "desc"]]
    });



</script>


