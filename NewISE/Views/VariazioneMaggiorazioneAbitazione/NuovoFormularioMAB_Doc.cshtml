@model NewISE.Models.DBModel.DocumentiModel
@{
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
    decimal idTipo = Convert.ToDecimal(ViewData["idTipo"]);
    string descTipo = Convert.ToString(ViewData["descTipo"]);
    
}
<style>
    .BordoRosso {
        border-style: double;
        border-color: red;
        border-width: 1px;
        display: inline-block;
    }
</style>


<div class="form-horizontal">
    <div class="form-group ">
        <div class="select2-container select2-container--classic col-xs-12">
          


            <div class="form-group">
                <div class="select2-container select2-container--classic col-xs-10">
                    <span style="font-size:medium">Seleziona il formulario di tipo <b>@descTipo</b></span>   
                </div>
                <div class="select2-container select2-container--classic col-xs-10">
                    <input id="file" name="file" multiple type="file" class="file file-loading hidden" data-allowed-file-extensions='["pdf"]' data-show-preview="false" value="">
                    <div id="divFile" style="display:inline-block">
                        <button class="btn btn-default" id="btUploadFMF">
                            <i class="fa fa-2x fa-upload" aria-hidden="true"></i>
                            Seleziona il formulario
                        </button>
                        <i class="fa fa-asterisk text-danger" aria-hidden="true"></i>
                        <span id="spantxtError" style="color:red;font-size:medium"></span>
                    </div>
                    <div>
                        <span id="spanNomeFile" style="color:green;font-size:medium"></span>
                    </div>
                    @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })
                </div>
            </div>


            @*<input id="file" name="file" multiple type="file" class="file file-loading hidden" data-allowed-file-extensions='["pdf"]' data-show-preview="false" value="">
            <div id="divFile" style="display:inline-block;">
                <button class="btn btn-default  " id="btUploadFMF">
                    <i class="fa fa-2x fa-upload" aria-hidden="true"></i>
                    Seleziona il formulario
                </button>
                <span id="spanNomeFile">Seleziona il formulario di tipo <b>@descTipo</b></span>
            </div>
            <i class="fa fa-asterisk text-danger" aria-hidden="true"></i>
            @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })*@
        </div>
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/ValidationWithBoot.js"></script>

<script type="text/javascript">
    $("#btUploadFMF").click(function () {
        //debugger;
        $("#file").empty();
        $("#file").click();
    });

    $("#file").change(function () {
        //debugger;
        var file = $("#file").val();
        if (file != null && file != undefined) {
            var splitFile = file.split("\\");
            var nomeFile = splitFile[splitFile.length - 1];
            var estensioniValide = new Array(".pdf");
            var estensione = nomeFile.substring(nomeFile.lastIndexOf('.')).toLowerCase();
            if (estensioniValide.contiene(estensione)) {
                $("#spanNomeFile").html("Hai selezionato il file <b>"+nomeFile+"</b>");
                $("#spantxtError").html("");
                $("#divFile").removeClass('BordoRosso');
                return true;
            } else {
                MsgErroreJson("L'estensione del documento che si vuole importare (" + estensione + ") non è supportata.\nL'estensione supportata è il .pdf");
                return false;
            }
        }
    });


    //function Validazione() {
    //    debugger;
    //    var ret = false;
    //    var file = $("#file").val();
    //    if (file != null && file != undefined && file != "") {
    //        $("#divFile").removeClass('BordoRosso');
    //        ret = true;
    //    }
    //    else {
    //        $("#divFile").addClass('BordoRosso');
    //        ret = false;
    //    }
    //    return ret;
    //}


   

    function NuovoFormularioMAB_VaiTipo() {
        //debugger;
        var datiForm = new FormData();
        var rotta = "/VariazioneMaggiorazioneAbitazione/NuovoFormularioMAB_TipoDoc";
        //var idTipo = $("#ldescrizioneTipoDoc").val();

        datiForm.append("idTrasferimento", @idTrasferimento);
        datiForm.append("idTipo", @idTipo);

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: datiForm, //I dati, forniti sotto forma di oggetto FormData
            dataType: 'html',
            cache: false,
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();
                $("#ModalNuovoFormularioMAB_Doc").modal("hide");
                $("#ModalNuovoFormularioMAB_TipoDoc").modal("show");
            },
            processData: false, //Serve per NON far convertire l’oggetto
            //FormData in una stringa, preservando il file
            contentType: false, //Serve per NON far inserire automaticamente
            //un content type errato
            success: function (result) {
                //debugger;

                $("#divViewNuovoFormularioMAB_TipoDoc").empty();
                $("#divViewNuovoFormularioMAB_TipoDoc").html(result);

            },
            complete: function () {
            },
            error: function (error) {
                //debugger;
                //Sblocca();

                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });
    }
</script>


