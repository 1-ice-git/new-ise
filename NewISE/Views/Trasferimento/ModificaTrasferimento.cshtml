@model NewISE.Models.DBModel.TrasferimentoModel

@using System.Web.Optimization
@using NewISE.Models.DBModel

@{
    bool ricaricaInfoTrasf = (bool)ViewBag.ricaricaInfoTrasf;
    int vMatricola = (int)ViewBag.Matricola;

    DipendentiModel d = (DipendentiModel)ViewBag.Dipendente;

    bool trasfSucc = (bool)ViewData["TrasfSucc"];

    bool abilitaNotifica = false;
    bool abilitaNuovoTrasferimento = false;
    bool abilitaSalva = false;

    bool ricaricaTrasferimenti = Convert.ToBoolean(ViewData["ricaricaTrasferimenti"]);

    decimal idRuoloDipendente = Convert.ToDecimal(ViewBag.idRuoloDipendente);

    if (Model.idStatoTrasferimento == EnumStatoTraferimento.Terminato || Model.idStatoTrasferimento == EnumStatoTraferimento.Terminato || Model.idStatoTrasferimento == EnumStatoTraferimento.Annullato)
    {
        abilitaNuovoTrasferimento = true;
        abilitaSalva = false;
        abilitaNotifica = false;
    }
    else if (Model.notificaTrasferimento == false)
    {
        abilitaNuovoTrasferimento = false;
        abilitaSalva = true;

        if (Model.idTipoTrasferimento > 0 &&
            Model.idUfficio > 0 &&
            Model.idStatoTrasferimento > 0 &&
            Model.idDipendente > 0 &&
            Model.idTipoCoan > 0 &&
            Model.dataPartenza > DateTime.MinValue &&
            Model.idRuoloUfficio > 0 &&
            Model.protocolloLettera != string.Empty &&
            Model.dataLettera > DateTime.MinValue &&
            Model.Documento != null &&
            Model.Documento.idDocumenti > 0)
        {
            abilitaNotifica = true;
        }
        else
        {
            abilitaNotifica = false;
        }

    }
    else if (Model.notificaTrasferimento == true)
    {
        abilitaSalva = false;
        abilitaNotifica = false;
        abilitaNuovoTrasferimento = false;
    }




}

@Html.Hidden("habilitaNotifica", abilitaNotifica)
@Html.Hidden("habilitaNuovoTrasferimento", abilitaNuovoTrasferimento)
@Html.Hidden("habilitaSalva", abilitaSalva)
@Html.Hidden("htrasfSucc", trasfSucc)

<div class="form-horizontal">
    @using (@Ajax.BeginForm("ConfermaModificaTrasferimento", "Trasferimento", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabNuovoTrasferimento", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formEditTrasf" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.idTrasferimento)

        @Html.HiddenFor(model => model.idStatoTrasferimento)
        @Html.Hidden("idDipendente", d.idDipendente)
        @Html.HiddenFor(model => model.idDocumento)

        @Html.Hidden("matricola", vMatricola)
        @Html.Hidden("ricaricaInfoTrasf", ricaricaInfoTrasf)
        @Html.Hidden("idRuoloDipendente", idRuoloDipendente)



        <div style="padding-top: 3px;">
            <div class="form-group">
                @Html.LabelFor(model => model.idTipoTrasferimento, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-3">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipoTrasferimento", ViewBag.ListTipoTrasferimento as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idTipoTrasferimento, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6">
                    <div class="col-xs-offset-6 col-xs-1">
                        <div id="divBtNuovoTrasferimento">
                            @Ajax.ActionLink("Nuovo Trasferimento", "NuovoTrasferimentoDaUt", "Trasferimento", new { idTrasfOld = Model.idTrasferimento }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabNuovoTrasferimento", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-success", @id = "btMuovoTrasf" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idUfficio, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-9">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idUfficio", ViewBag.ListUfficio as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idUfficio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataPartenza, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div class="col-xs-9 form-inline">
                    @Html.TextBoxFor(model => model.dataPartenza, "{0:dd/MM/yyyy}", new { @class = "form-control", style = "max-width:200px;" })
                    @Html.ValidationMessageFor(model => model.dataPartenza, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RuoloUfficio.DescrizioneRuolo, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-3">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idRuoloUfficio", ViewBag.ListRuolo as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idRuoloUfficio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.idTipoCoan, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-9">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipoCoan", ViewBag.ListTipoCoan as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "AbilitaDisabilitaCoan();" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idTipoCoan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.coan, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div class="col-xs-9">
                    @Html.EditorFor(model => model.coan, new { htmlAttributes = new { @class = "form-control", @style = "max-width:200px;" } })
                    @Html.ValidationMessageFor(model => model.coan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idFKM, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-9">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idFKM", ViewBag.ListFasciaKM as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idFKM, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Visualizza lettera di trasferimento", new { @class = "control-label col-xs-3" })
                @if (Model != null && Model.idDocumento > 0)
                {
                    <div class="col-xs-1">
                        <a href="@Url.RouteUrl("LeggiDocumento", new {id = Model.idDocumento})" target="_blank"><img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" /></a>
                    </div>
                }
                else
                {
                    <div class="col-xs-1">
                        <img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon-Disable.png" />
                    </div>
                }
                <div class="col-xs-3">
                    @if (Model != null && Model.idDocumento > 0)
                    {
                        <button id="btLetteraTrsf" type="button" class="btn btn-default btn-sm" onclick=" DocumentoModal(); ">
                            <i class="fa fa-2x fa-floppy-o" aria-hidden="true"></i>
                            Sostituisci Lettera trasf.
                        </button>
                    }
                    else
                    {
                        <button id="btLetteraTrsf" type="button" class="btn btn-default btn-sm" onclick=" DocumentoModal(); ">
                            <i class="fa fa-2x fa-floppy-o" aria-hidden="true"></i>
                            Inserisci Lettera trasf.
                        </button>
                    }
                </div>
            </div>
        </div>
    }

    <div class="form-group">

        <div class="col-xs-offset-7 col-xs-1">
            <button type="button" class="btn btn-default btn-sm" id="btModifica">
                <i class="fa fa-2x fa-floppy-o" aria-hidden="true"></i>
                Salva
            </button>
        </div>




        <div class="col-xs-1">
            <button class="btn btn-default btn-sm " id="btNotifica" onclick="NotifcaModal();">
                <i class="fa fa-2x fa-envelope" aria-hidden="true"></i>
                Notifica
            </button>
        </div>

    </div>
</div>


<div class="modal fade" id="myModalInfo" tabindex="-3" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title alert alert-info text-info" id="myModalLabel">Info!!!</h4>
            </div>
            <div class="modal-body alert alert-info text-info">
                <p id="msgModalInfo" class="text-info"></p>
            </div>
            <div class="modal-footer">
                <button id="btProcedi" type="button" class="btn btn-info" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="notificaModal" tabindex="-2" role="dialog" aria-labelledby="notificaModelLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="notificaModelLabel">Notifica del trasferimento</h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1.5em;">
                <p>Procedere con la notifica del trasferimento?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal" onclick="NotificaTrasferimento();">Invia notifica</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="inviaDocModal" tabindex="-1" role="dialog" aria-labelledby="inviaDocModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="notificaModelLabel">Lettera di trasferimento</h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                <p id="viewDocumento">
                    <img src="~/Immagini/Loading/ajax-loader (1).gif" />
                </p>
            </div>
            <div class="modal-footer">
                <button id="btUploadLett" type="button" class="btn btn-info" onclick="SalvaDocumento();">Salva</button>
                <button id="btAnnullaLett" type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">


    @if (ricaricaTrasferimenti)
    {
         @:ElencoTrasferimento();
                                                                                                        }



    LetturaParametriGestioneTrasferimento();
    AbilitaDisabilitaCoan();


    function LetturaParametriGestioneTrasferimento() {

        //debugger;

        var idTrasferimento = parseInt($('#hidTrasferimento').val());

        if (isNaN(idTrasferimento)) {
            return;
        }

        var rotta = "/Trasferimento/LetturaParametriGestioneTrasferimento";

        $.ajax({
            type: "POST",
            url: rotta,
            data: {
                idTrasferimento: idTrasferimento
            },
            dataType: 'json',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();


            },
            success: function (result) {
                //debugger;

                if (result.err == "" || typeof result.err == "undefined") {

                    $('#habilitaNotifica').val(result.abilitaNotifica);
                    $('#habilitaNuovoTrasferimento').val(result.abilitaNuovoTrasferimento);
                    $('#habilitaSalva').val(result.abilitaSalva);
                    $('#htrasfSucc').val(result.trasferimentoSuccessivo);

                    RicaricaInfoTrasferimento();
                    AbilitaDisabilitaCoan();
                    AbilitaMenuGestioneTrasferimento(idTrasferimento);
                    disabilitaControlli();

                }
                else {

                    var err = result.err;
                    ErroreElaborazioneAjax(err);
                }
            },
            complete: function () {

                Sblocca();
            },
            error: function (error) {
                //debugger;
                Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }

        });

    }

    function disabilitaControlli() {
        //debugger;

        var vabilitaNuovoTrasferimento = $('#habilitaNuovoTrasferimento').val();
        var vAbilitaSalva = $('#habilitaSalva').val();
        var vAbilitaNotofica = $('#habilitaNotifica').val();
        var vTrasfSucc = $('#htrasfSucc').val();


        var abilitaNuovoTrasferimento = vabilitaNuovoTrasferimento == "true" ? true : false;
        var abilitaSalva = vAbilitaSalva == "true" ? true : false;
        var abilitaNotifica = vAbilitaNotofica == "true" ? true : false;
        var trasfSucc = vTrasfSucc == "true" ? true : false;

        if (trasfSucc) {
            $("#btMuovoTrasf").hide();
        } else {
            $("#btMuovoTrasf").show();
        }

        if (abilitaNuovoTrasferimento == true) {
            $('#divBtNuovoTrasferimento').show();

            $("#btModifica").attr("disabled", "disabled");
            $("#btNotifica").attr("disabled", "disabled");

            $("#idTipoTrasferimento").attr("disabled", "disabled");
            $("#idUfficio").attr("disabled", "disabled");
            $("#dataPartenza").attr("disabled", "disabled");
            $("#idRuoloUfficio").attr("disabled", "disabled");
            $("#idTipoCoan").attr("disabled", "disabled");
            $("#coan").attr("disabled", "disabled");
            $("#btLetteraTrsf").attr("disabled", "disabled");
        }
        else if (abilitaSalva == true && abilitaNotifica == false && abilitaNuovoTrasferimento == false) {
            $('#divBtNuovoTrasferimento').hide();

            $("#btModifica").removeAttr("disabled");
            $("#btNotifica").attr("disabled", "disabled");

            $("#idTipoTrasferimento").removeAttr("disabled");
            $("#idUfficio").removeAttr("disabled");
            $("#dataPartenza").removeAttr("disabled");
            $("#idRuoloUfficio").removeAttr("disabled");
            $("#idTipoCoan").removeAttr("disabled");
            $("#coan").removeAttr("disabled");
            $("#btLetteraTrsf").removeAttr("disabled");
        }
        else if (abilitaSalva == true && abilitaNotifica == true && abilitaNuovoTrasferimento == false) {
            $('#divBtNuovoTrasferimento').hide();
            $("#btModifica").removeAttr("disabled");
            $("#btNotifica").removeAttr("disabled");


            $("#idTipoTrasferimento").removeAttr("disabled");
            $("#idUfficio").removeAttr("disabled");
            $("#dataPartenza").removeAttr("disabled");
            $("#idRuoloUfficio").removeAttr("disabled");
            $("#idTipoCoan").removeAttr("disabled");
            $("#coan").removeAttr("disabled");
            $("#btLetteraTrsf").removeAttr("disabled");
        } else {
            $('#divBtNuovoTrasferimento').hide();

            $("#btModifica").attr("disabled", "disabled");
            $("#btNotifica").attr("disabled", "disabled");

            $("#idTipoTrasferimento").attr("disabled", "disabled");
            $("#idUfficio").attr("disabled", "disabled");
            $("#dataPartenza").attr("disabled", "disabled");
            $("#idRuoloUfficio").attr("disabled", "disabled");
            $("#idTipoCoan").attr("disabled", "disabled");
            $("#coan").attr("disabled", "disabled");
            $("#btLetteraTrsf").attr("disabled", "disabled");
        }





    }

    function NotifcaModal() {
        $('#notificaModal').modal().show();
    }

    $("#btModifica").click(function () {
        //debugger;
        $("#formEditTrasf").submit();
    });

    function CloseTimeModal() {
        $("#btUploadLett").attr("disabled", "disabled");
        $("#btUploadLett").addClass("disabled");
        $("#btAnnullaLett").attr("disabled", "disabled");
        $("#btAnnullaLett").addClass("disabled");
        setTimeout(CloseModalFile, 2000);
        //CloseModalFile();
    }

    function CloseModalFile() {
        $('#inviaDocModal').modal('hide');
        //RicaricaModificaTrasferimento();
        setTimeout(RicaricaModificaTrasferimento, 1000);
    }

    function DocumentoModal() {
        //debugger;
        var rotta = "/Documenti/LetteraDiTrasferimento";
        var idTrasferimento = parseInt($("#idTrasferimento").val());

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idTrasferimento: idTrasferimento },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                $('#inviaDocModal').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                $("#viewDocumento").empty();
                $("#viewDocumento").html(result);

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }


    $("#idTipoTrasferimento").select2({
        placeholder: "Seleziona il tipo trasferimento",
        allowClear: true,
        language: "it",
        width: '350'

    });

    $("#idUfficio").select2({
        placeholder: "Seleziona l'ufficio",
        allowClear: true,
        language: "it",
        width: '250'

    });

    $("#idRuoloUfficio").select2({
        placeholder: "Seleziona il ruolo",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $("#idTipoCoan").select2({
        placeholder: "Seleziona la tipologia del coan",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $("#idFKM").select2({
        placeholder: "Seleziona la fascia chilometrica",
        allowClear: true,
        language: "it",
        width: '200'

    });



    $('#dataPartenza').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });


    function DialogInfo(response) {
        $("#msgModalInfo").text(response);
        $('#myModalInfo').modal().show();
    }

    $("#msgModalInfo").on('hide.bs.modal', function() {
        //debugger;
        //$('.modal-backdrop').hide();
        //$(this).data('bs.modal', null);
        $(this).remove();
        $('.modal-backdrop').remove();
    });


    function AbilitaDisabilitaCoan() {
        //debugger;

        var valore = $("#idTipoCoan").val();

        if (valore == "1") {
            $("#coan").attr("disabled", "disabled");
        }
        else {
            $("#coan").removeAttr("disabled");
        }
    }

    function NotificaTrasferimento() {
        //debugger;
        var rotta = "/Trasferimento/NotificaTrasferimento";
        var idTrasferimento = parseInt($("#idTrasferimento").val());

        $.ajax({
            type: "POST",
            url: rotta,
            data: {
                idTrasferimento: idTrasferimento
            },
            dataType: 'json',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                Blocca();

            },
            success: function (result) {
                //debugger;

                if (result.msg != "" && typeof result.msg !== "undefined") {
                    $('#habilitaNotifica').val(false);
                    //DialogInfo(result.msg);

                    LetturaParametriGestioneTrasferimento();

                    //RicaricaInfoTrasferimento();
                    //AbilitaDisabilitaCoan();

                    //AbilitaMenuGestioneTrasferimento(idTrasferimento);

                    //disabilitaControlli();
                }
                else {

                    var err = result.err;
                    ErroreElaborazioneAjax(err);
                }
            },
            complete: function () {

                Sblocca();
            },
            error: function (error) {
                //debugger;
                Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }

        });
    }

    function RicaricaInfoTrasferimento() {
        //debugger;
        var rit = '@ricaricaInfoTrasf.ToString()';

        var idTrasferimento = parseInt($("#idTrasferimento").val());
        var boolrit = rit == 'True';

        if (boolrit == true) {
            InfoTrasferimento(idTrasferimento);
        }
    }

    function AbilitaMenuGestioneTrasferimento(idTrasferimento) {
        GestioneAbilitazioneMenu(idTrasferimento);
    }

    function RicaricaModificaTrasferimento() {
        //debugger;

        var rotta = "/Trasferimento/ModificaTrasferimento";
        var idTrasferimento = parseInt($("#idTrasferimento").val());
        var matricola = '@vMatricola';
        var ricaricaInfoTrasf = '@ricaricaInfoTrasf';
        var idRuoloDipendente = @idRuoloDipendente;

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idTrasferimento: idTrasferimento, matricola: matricola, idRuoloDipendente: idRuoloDipendente, ricaricaInfoTrasf: ricaricaInfoTrasf },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                //VerificaAutenticazione();
                //$('#inviaDocModal').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                $("#tabNuovoTrasferimento").empty();
                $("#tabNuovoTrasferimento").html(result);

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }
</script>