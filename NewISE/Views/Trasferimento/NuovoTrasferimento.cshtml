@model NewISE.Models.DBModel.TrasferimentoModel

@using System.Web.Optimization
@using NewISE.Models.DBModel

@*<link href="~/Content/NuovoTrasferimento.css" rel="stylesheet" />*@

@{
    bool ricaricaInfoTrasf = (bool)ViewBag.ricaricaInfoTrasf;
    string vMatricola = (string)ViewBag.Matricola;

    DipendentiModel d = (DipendentiModel)ViewBag.Dipendente;

}

<div class="form-horizontal">

    @*@Html.HiddenFor(model => model.idTrasferimento)*@
    @*@Html.HiddenFor(model => model.idStatoTrasferimento)*@
    @using (@Ajax.BeginForm("InserisciTrasferimento", "Trasferimento", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabNuovoTrasferimento", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formNewTrasf" }))
    {
        @Html.AntiForgeryToken()

        @Html.Hidden("idDipendente", d.idDipendente)

        @Html.Hidden("matricola", vMatricola)
        @Html.Hidden("ricaricaInfoTrasf", ricaricaInfoTrasf)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div style="padding-top:3px;">
            <div class="form-group">
                @Html.LabelFor(model => model.idTipoTrasferimento, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-3">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipoTrasferimento", ViewBag.ListTipoTrasferimento as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idTipoTrasferimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idUfficio, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-9">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idUfficio", ViewBag.ListUfficio as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idUfficio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.dataPartenza, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div class="col-xs-9 form-inline">
                    @Html.TextBoxFor(model => model.dataPartenza, new { htmlAttributes = new { @class = "form-control", @style = "width:200px;" } })
                    @Html.ValidationMessageFor(model => model.dataPartenza, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idRuoloUfficio, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-3">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idRuoloUfficio", ViewBag.ListRuolo as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idRuoloUfficio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idTipoCoan, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div id="divCombo" class="col-xs-9">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipoCoan", ViewBag.ListTipoCoan as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "AbilitaDisabilitaCoan(this.value);" })
                    </div>
                    @Html.ValidationMessageFor(model => model.idTipoCoan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.coan, htmlAttributes: new { @class = "control-label col-xs-3" })
                <div class="col-xs-9">
                    @Html.EditorFor(model => model.coan, new { @class = "form-control", @style = "width:200px;" })
                    @Html.ValidationMessageFor(model => model.coan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }

    <div class="form-group ">
        <div class="col-xs-offset-8 col-xs-1">
            <button class="btn btn-default btn-sm" onclick="inserisci();" id="btSalva">
                <i class="fa fa-2x fa-floppy-o" aria-hidden="true"></i>
                Salva
            </button>
        </div>
        <div class="col-xs-1">
            <button class="btn btn-default btn-sm disabled" disabled id="btNotifica">
                <i class="fa fa-2x fa-envelope" aria-hidden="true"></i>
                Notifica
            </button>
        </div>
        <div class="col-xs-1">
            <button class="btn btn-default btn-sm disabled" disabled id="btStampa">
                <i class="fa fa-2x fa-print" aria-hidden="true"></i>
                Stampa
            </button>
        </div>
    </div>
</div>

@*<div class="modal fade" id="myModalError" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title alert alert-danger text-danger" id="myModalLabel">Attenzione!!!</h4>
                </div>
                <div class="modal-body alert alert-danger text-danger">
                    <p id="msgModalError" class="text-danger"></p>
                </div>
                <div class="modal-footer">
                    <button id="btProcedi" type="button" class="btn btn-danger" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>*@

<div class="modal fade" id="myModalInfo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title alert alert-info text-info" id="myModalLabel">Info!!!</h4>
            </div>
            <div class="modal-body alert alert-info text-info">
                <p id="msgModalInfo" class="text-info"></p>
            </div>
            <div class="modal-footer">
                <button id="btProcedi" type="button" class="btn btn-info" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $("#idTipoTrasferimento").select2({
        placeholder: "Seleziona il tipo trasferimento",
        allowClear: true,
        language: "it",
        width: '350'

    });

    $("#idUfficio").select2({
        placeholder: "Seleziona l'ufficio",
        allowClear: true,
        language: "it",
        width: '250'

    });

    $("#idRuoloUfficio").select2({
        placeholder: "Seleziona il ruolo",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $("#idTipoCoan").select2({
        placeholder: "Seleziona la tipologia del coan",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $('#dataPartenza').datepicker({
        showButtonPanel: true,
        showAnim: "slide",
    });

    $('#dataLettera').datepicker({
        showButtonPanel: true,
        showAnim: "slide",
    });

    //function ErroreElaborazioneAjax(response) {
    //    //debugger;
    //    $("#msgModalError").text("Errore nell'elaborazione.");
    //    $('#myModalError').modal('toggle');
    //}

    function DialogInfo(response) {
        $("#msgModalInfo").text(response);
        $('#myModalInfo').modal('toggle');
    }


    function AbilitaDisabilitaCoan(value) {
        //debugger;
        if (value == "1") {
            $("#coan").attr("disabled", "disabled");
        }
        else {
            $("#coan").removeAttr("disabled");
        }
    }

    function inserisci() {
        //debugger;
        $("#formNewTrasf").submit();
    }


</script>