@model NewISE.Models.dipInfoTrasferimentoModel
@using NewISE.Models.DBModel;
@using NewISE.Models.Enumeratori


@{
    EnumStatoTraferimento statoTrasferimento = Model.statoTrasferimento;
    string varDescStatoTrasf = string.Empty;

    switch (statoTrasferimento)
    {
        case EnumStatoTraferimento.Attivo:
            varDescStatoTrasf = "Attivo";
            break;
        case EnumStatoTraferimento.Da_Attivare:
            varDescStatoTrasf = "Da Attivare";
            break;
        case EnumStatoTraferimento.Non_Trasferito:
            varDescStatoTrasf = "Non Trasferito";
            break;
        case EnumStatoTraferimento.Terminato:
            varDescStatoTrasf = "Terminato";
            break;
        case EnumStatoTraferimento.Annullato:
            varDescStatoTrasf = "Annullato";
            break;
        default:
            break;
    }

}


<div class="form-horizontal">
    @Html.HiddenFor(model => model.statoTrasferimento)
    <div class="form-group">
        @Html.Label("lblStatoTrasferimento", "Stato Trasferimento", new { @class = "control-label col-xs-4" })
        <div class="col-xs-8">
            <input id="statoTrasferimentoDesc" name="statoTrasferimentoDesc" type="text" value="@varDescStatoTrasf" class="form-control" readonly />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblCdcDestinazione", "CDC destinazione", new { @class = "control-label col-xs-4" })
        <div class="col-xs-3">
            <input id="CDCDestinazione" name="CDCDestinazione" type="text" value="@Model.CDCDestinazione" class="form-control" readonly />
        </div>
        @Html.Label("lblDecorrenza", "Decorrenza", new { @class = "control-label col-xs-2" })
        <div class="col-xs-3">
            @if (Model.Decorrenza.HasValue)
            {
                <input id="Decorrenza" name="Decorrenza" type="text" value="@Model.Decorrenza.Value.ToShortDateString()" class="form-control" readonly />
            }
            else
            {
                <input id="Decorrenza" name="Decorrenza" type="text" value="" class="form-control" readonly />
            }
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblRuolo", "Ruolo", new { @class = "control-label col-xs-4" })
        <div class="col-xs-8">
            <input id="DescrizioneRuolo" name="DescrizioneRuolo" type="text" value="@Model.RuoloUfficio.DescrizioneRuolo" class="form-control" readonly />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblIndbase", "Indennità Base Lorda", new { @class = "control-label col-xs-4" })
        <div class="col-xs-3">
            <input id="indennitaBase" name="indennitaBase" type="text" value="@Model.indennitaBase.ToString("N2")" class="form-control text-right" readonly />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblIndennitaservizio", "Indennità Servizio", new { @class = "control-label col-xs-4" })
        <div class="col-xs-3">
            <input id="indennitaServizio" name="indennitaServizio" type="text" value="@Model.indennitaServizio.ToString("N2")" class="form-control text-right" readonly />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblMaggiorazioniFamiliari", "Maggiorazioni Familiari", new { @class = "control-label col-xs-4" })
        <div class="col-xs-3">
            <input id="maggiorazioniFamiliari" name="maggiorazioniFamiliari" type="text" value="@Model.maggiorazioniFamiliari.ToString("N2")" class="form-control text-right" readonly />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("lblIndennitaPersonale", "Indennità Personale", new { @class = "control-label col-xs-4" })
        <div class="col-xs-3">
            <input id="indennitaPersonale" name="indennitaPersonale" type="text" value="@Model.indennitaPersonale.ToString("N2")" class="form-control text-right" readonly />
        </div>

    </div>



</div>
