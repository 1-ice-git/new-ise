@model NewISE.Models.ViewModel.VariazioneRuoloDipendenteModel

<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@{
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
    string ruoloAttuale = Convert.ToString(ViewData["RuoloAttuale"]);
    var errori = ViewData.ModelState;
}

<div style="padding-right:10px;">
    @using (@Ajax.BeginForm("InserisciRuoloDipendente", "RuoloDipendente", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divRuoliDipendente", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { id = "formNewRuoloDipendente" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("idTrasferimento", idTrasferimento)

        <div class="form-horizontal">
            <h4>Nuovo Ruolo Dipendente</h4>
            <hr />

            <div class="row">
                <div class="col-xs-12" style="padding-top:5px; padding-bottom:5px">
                    <div class="row">
                        <div class="form-group">
                            @Html.Label("Ruolo Atttuale", htmlAttributes: new { @class = "control-label col-xs-2" })
                            <div class="col-xs-2">
                                <input type="text" id="ruoloAttuale" value="@ruoloAttuale" readonly="readonly" class="form-control" />
                            </div>
                        </div>

                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.ut_dataInizioValidita, htmlAttributes: new { @class = "control-label col-xs-2" })
                            <div class="col-xs-2">
                                @Html.TextBoxFor(model => model.ut_dataInizioValidita, new { @class = "form-control col-xs-2", @type = "datetime", @onchange = "AzzeraListaRuoli();" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Nuovo Ruolo", htmlAttributes: new { @class = "control-label col-xs-2" })
                            <div class="select2-container select2-container--classic col-xs-2">
                                @Html.DropDownListFor(Model => Model.idRuolo, ViewBag.lRuoli as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select col-xs-2", @onchange = "", id="idNewRuolo"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(Model => Model.chkAggiornaTutti, htmlAttributes: new { @class = "control-label col-xs-2" })
                            <div class="col-xs-2">
                                <span class="text-uppercase">@Html.CheckBoxFor(model => model.chkAggiornaTutti)</span>
                            </div>
                        </div>

                        <div class="form-group">&nbsp;</div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-offset-2 col-xs-10">
                            <input type="submit" value="Salva" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="ModalErrorNewRuoloDipendente" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                        </div>
                        <div class="modal-body alert alert-warning text-warning">
                            <p id="msgModalWarning" class="text-warning">
                                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            </p>
                        </div>
                        <div class="modal-footer">
                            <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div style="padding-bottom:30px">
        @Ajax.ActionLink("Torna indietro", "ElencoRuoliDipendente", "RuoloDipendente", new { idTrasferimento = idTrasferimento }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divRuoliDipendente", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>

<script type="text/javascript">

    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
            break;
        }
    }


    function DialogModalError(err) {
        //debugger;
        if (err == 'True') {
            $('#ModalErrorNewRuoloDipendente').modal('toggle');
        }
    }


    function AzzeraListaRuoli() {
        $('#idNewRuolo').html('');
    }


    $('#ut_dataInizioValidita').datepicker({
        showAnim: "slide",
        changeMonth: true,
        changeYear: true
    });



    $("#idNewRuolo").select2({
        placeholder: "Seleziona Ruolo",
        allowClear: false,
        language: "it",
        //width: '150',
        ajax: {
            delay: 250,
            url: "/RuoloDipendente/ListaRuoliDipendente",
            data: function (dati) {
                //debugger;
                var dataRif = $('#ut_dataInizioValidita').val();
                var idTrasferimento = parseInt('@idTrasferimento');
                var query = {
                    search: dati.term,
                    dtRif: dataRif,
                    idTrasferimento: idTrasferimento,
                    type: 'public'
                }

                // Query parameters will be ?search=[term]&type=public
                return query;
            },
            dataType: 'json',
            type: "post",
            processResults: function (data) {
                //debugger;
                return {
                    results: data.results
                }
            }
        }
    });


    function ListaRuoliDipendente(idTrasferimento) {
        //debugger;
        var rotta = "/RuoloDipendente/ListaRuoliDipendente";
        var dataRif = $('#ut_dataInizioValidita').val();

        $.ajax({
            type: "POST",
            url: rotta,

            data: { idTrasferimento: idTrasferimento, dataRif: dataRif },
            dataType: 'json',
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                Blocca();

            },
            success: function (result) {
                //debugger;
                //???
            },
            complete: function () {
                //PulsantiNotificaAttivaMagFam();
                Sblocca();
            },
            error: function (error) {
                //debugger;
                Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });
    }

    $.culture = Globalize.culture("it-IT");

</script>

