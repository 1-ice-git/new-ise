@using NewISE.Models.DBModel
@using NewISE.Models.Enumeratori
@model NewISE.Models.ViewModel.VariazioneTEPartenzaModel

@{
    bool richiestaTE = Convert.ToBoolean(ViewData["richiestaTE"]);
    bool rinunciaTE = Convert.ToBoolean(ViewData["rinunciaTE"]);

    bool attivazioneTE = Convert.ToBoolean(ViewData["attivazioneTE"]);
    bool DocAttestazione = Convert.ToBoolean(ViewData["DocAttestazione"]);
    //    bool rinunciaTEPartenza = Convert.ToBoolean(ViewData["rinunciaTEPartenza"]);
    decimal idTEPartenza = Convert.ToDecimal(ViewData["idTEPartenza"]);
    //decimal indennita = Convert.ToDecimal(ViewData["indennita"]);
    //decimal perc_km = Convert.ToDecimal(ViewData["perc_km"]);
    //decimal contributoLordo = Convert.ToDecimal(ViewData["contributoLordo"]);
}

<script src="~/Scripts/autoNumeric/autoNumeric.min.js"></script>

<div class="col-xs-12">
    <div class="col-xs-12 fa-border" style="background-color:white; border:solid;border-width:thin;margin-bottom:15px;border-radius:15px">
        <div class="row">
            <div class="col-xs-4 text-right" style="padding-top:10px">
                <label for="indennitaPrimaSistemazione" class="control-label">@Html.DisplayNameFor(model => model.indennitaPrimaSistemazione)</label>
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.indennitaPrimaSistemazione, string.Format("{0:N2}", Model.indennitaPrimaSistemazione), new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
        </div>
<div class="row">
    <div class="col-xs-12" style="margin-left:30px;">
        <h4><strong>SALDO TRASPORTO EFFETTI PARTENZA</strong></h4>
        <div class="row">
            <div class="col-xs-4 text-right" style="padding-top:10px">
                <label for="percKM" class="control-label">@Html.DisplayNameFor(model => model.percKM)</label>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <hr>
    </div>
</div>
<div class="col-xs-12">
    <div class="col-xs-12 fa-border" style="background-color:white; border:solid;border-width:thin;margin-bottom:15px;border-radius:15px">
        <div class="row">
            <div class="col-xs-4 text-right" style="padding-top:10px">
                <label for="indennitaPrimaSistemazione" class="control-label">@Html.DisplayNameFor(model => model.indennitaPrimaSistemazione)</label>
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.percKM, new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.indennitaPrimaSistemazione, string.Format("{0:N2}", Model.indennitaPrimaSistemazione), new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right" style="padding-top:10px">
                <label for="percKM" class="control-label">@Html.DisplayNameFor(model => model.percKM)</label>
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.percKM, new { @readonly = "readonly", @class = "form-control text-right" })
            </div>

            <div class="col-xs-2 text-center" style="padding-top:10px">
                <label for="anticipoPercepito" class="control-label">@Html.DisplayNameFor(model => model.anticipoPercepito)</label>
            </div>
            <div class="col-xs-3 text-center" style="padding-top:10px">
                <label for="anticipoPercepito" class="control-label">@Html.DisplayNameFor(model => model.saldo)</label>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right" style="padding-top:10px">
                <label for="contributoLordo" class="control-label">@Html.DisplayNameFor(model => model.contributoLordo)</label>
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.contributoLordo, string.Format("{0:N2}", Model.contributoLordo), new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
            <div class="col-xs-2" style="padding-top:5px">
                @Html.TextBoxFor(model => model.anticipoPercepito, string.Format("{0:N2}", Model.anticipoPercepito), new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
            <div class="col-xs-3" style="padding-top:5px">
                @Html.TextBoxFor(model => model.saldo, string.Format("{0:N2}", Model.saldo), new { @readonly = "readonly", @class = "form-control text-right" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                &nbsp;
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-5" style="text-align:right">
            <b>Modulo 3 - (Attestazione Avvenuto Trasloco - Trasferimento)</b>
        </div>
        <div class="col-xs-2" style="padding-left:10px;padding-bottom:10px">
            @if (rinunciaTE==false)
            {
                if (DocAttestazione)
                {
                    <a href="#" onclick="ElencoDocumentiVariazioneTEP(@Convert.ToDecimal(@EnumTipoDoc.Attestazione_Trasloco));" id="linkElencoDocVariazioniTEP">
                        <img src="~/Immagini/IconeDocumenti/PDF-icon.png" width="17" title="Elenco documentazione attestazione avvenuto trasloco" />
                    </a>
                }
                else
                {
                    <a href="#" onclick="ElencoDocumentiVariazioneTEP(@Convert.ToDecimal(@EnumTipoDoc.Attestazione_Trasloco));" id="linkElencoDocVariazioniTEP">
                        <img src="~/Immagini/IconeDocumenti/PDF-icon-Disable.png" width="17" title="Elenco documentazione attestazione avvenuto trasloco" />
                    </a>
                }
            }
            else
            {
                <img src="~/Immagini/IconeDocumenti/PDF-icon-Grey.png" width="17" title="Elenco documentazione attestazione avvenuto trasloco" />
            }
        </div>
    </div>
</div>

<script type="text/javascript">

    //$('#valIndennitaPrimaSistemazione').autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: '€ ',
    //    nSep: true
    //});

    valIndennitaPrimaSistemazione = new AutoNumeric('#valIndennitaPrimaSistemazione', autoNumericOptionsEuroOttoDec);

    //$('#valContributoLordo').autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: '€ ',
    //    nSep: true
    //});

    valContributoLordo = new AutoNumeric('#valContributoLordo', autoNumericOptionsEuroOttoDec);

    //$('#valPercKM').autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: ' %',
    //    pSign: 's',
    //    vMin: 0,
    //    vMax: 100,
    //    nSep: true
    //});

    valPercKM = new AutoNumeric('#valPercKM', autoNumericOptionsEuroTreDec);

    //$('#valAnticipoPercepito').autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: '€ ',
    //    nSep: true
    //});

    valAnticipoPercepito = new AutoNumeric('#valAnticipoPercepito', autoNumericOptionsEuroOttoDec);

    //$('#valSaldo').autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: '€ ',
    //    nSep: true
    //});

    valSaldo = new AutoNumeric('#valSaldo', autoNumericOptionsEuroOttoDec);

    //$('#valIndennitaPrimaSistemazione').autoNumeric('set', @Model.indennitaPrimaSistemazione);
    valIndennitaPrimaSistemazione.set(@Model.indennitaPrimaSistemazione);

    //$('#valContributoLordo').autoNumeric('set', @Model.contributoLordo);

    valContributoLordo.set(@Model.contributoLordo);

    //$('#valPercKM').autoNumeric('set', @Model.percKM);

    valPercKM.set(@Model.percKM);

    //$('#valAnticipoPercepito').autoNumeric('set', @Model.anticipoPercepito);
    valAnticipoPercepito.set(@Model.anticipoPercepito);

    //$('#valSaldo').autoNumeric('set', @Model.saldo);

    valSaldo.set(@Model.saldo);

    function ElencoDocumentiVariazioneTEP(idTipoDocumento) {
        //debugger;
        var idTEPartenza = parseInt('@idTEPartenza');

        var rotta = "/VariazioneTrasportoEffetti/ElencoDocumentiVariazioneTEP";

        $.ajax({
            type: "POST",
            url: rotta,
            data: {
                idTipoDocumento: idTipoDocumento,
                idTEPartenza: idTEPartenza
            },
            dataType: 'html',
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //$("#DialogNewDoc").dialog("destroy");
                //$("#divEffettoLoadAutNoDoc").show("slow");
            },
            success: function (result) {
                //debugger;
                //$("#divEffettoLoadAutNoDoc").hide("slow");
                $("#divVariazioneTEP").empty();
                $("#divVariazioneTEP").html(result);

                //RicercaDocumenti();

            },
            complete: function () {

            },
            error: function (jqXHR, textStatus, errorThrow) {
                //debugger;
                var msg = errorThrow.err;
                ErroreElaborazioneAjax(msg);
            }

        });
    }

</script>


