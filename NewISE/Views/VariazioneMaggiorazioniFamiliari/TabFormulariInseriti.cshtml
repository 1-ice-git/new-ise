@using NewISE.Models.ViewModel
@using NewISE.Models.DBModel
@*model IEnumerable<NewISE.Models.DBModel.DocumentiModel>*@
@model IEnumerable<NewISE.Models.DBModel.VariazioneDocumentiModel>

@{
    bool solaLettura = Convert.ToBoolean(ViewData["solaLettura"]);
    EnumChiamante enChiamante = EnumChiamante.VariazioneMaggiorazioniFamiliari;
}

<table class="table"  id="tabElencoFormulariInseriti_Var">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.progressivo )
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nomeDocumento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.estensione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.dataInserimento)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto;font-weight:bold">
                        @Html.DisplayFor(modelItem => item.progressivo )
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto;font-weight:bold">
                        @Html.DisplayFor(modelItem => item.progressivo )
                    </td>
                }

                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.nomeDocumento)
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.nomeDocumento)
                    </td>
                }
                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.estensione)
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.estensione)
                    </td>
                }


                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.dataInserimento)
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        @Html.DisplayFor(modelItem => item.dataInserimento)
                    </td>
                }

                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        <a href="@Url.RouteUrl("LeggiDocumento", new {id = item.idDocumenti})" target="_blank"><img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" title="Click per visualizzare il formulario." /></a>
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        <a href="@Url.RouteUrl("LeggiDocumento", new {id = item.idDocumenti})" target="_blank"><img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" title="Click per visualizzare il formulario." /></a>
                    </td>
                }

                @if (item.Modificabile)
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        <button class="btn btn-link" onclick="EliminaFormulario(@item.idDocumenti);">Elimina </button>
                    </td>
                }
                else
                {
                    <td style="background-color:@item.ColoreSfondo;color:@item.ColoreTesto">
                        <button class="btn btn-link disabled" disabled>Elimina</button>
                    </td>
                }
            </tr>
        }
    </tbody>

</table>

<div class="modal fade" id="ModalEliminaFormularioMF" tabindex="-1" role="dialog" aria-labelledby="ModalEliminaFormularioMFLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="EliminaFormularioMFLabel">Elimina Formulario Maggiorazioni Familiari</h3>
            </div>
            <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                <input type="hidden" id="hIdDocFormularioMF" />
                <p><label>Eliminare il formulario selezionato?</label></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="ConfermaEliminaFormularioMF();">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $("#tabElencoFormulariInseriti_Var").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        
        },
        "info": false,
        "lengthChange": false,
        "pageLength": 4,
        "searching": false,
        "paging": true,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        "order": [[3, "desc"]]
       
        //dom: 'Bfrtip',
        //buttons: [
        //    {
        //        text: 'Nuovo Coniuge',
        //        className: 'green',
        //        action: function (e, dt, node, config) {
        //            NuovoConiuge();
        //        }
        //    }
        //],
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "visible": false,
        //        "searchable": false
        //    },

        //]
    });

    function EliminaFormulario(idDoc) {
        $("#hIdDocFormularioMF").val(idDoc);
        $("#ModalEliminaFormularioMF").modal("show");
    }

    function ConfermaEliminaFormularioMF() {
        //debugger;
        var rotta = "/Documenti/EliminaFormularioMF";
        var idDoc = $("#hIdDocFormularioMF").val();
        $("#ModalEliminaFormularioMF").modal("hide");
        var chiamante = parseInt(@Convert.ToDecimal(enChiamante));

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idDocumento: idDoc, chiamante: chiamante }, //I dati, forniti sotto forma di oggetto FormData
            dataType: 'json',
            cache: false,
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();

            },
            success: function (result) {
                //debugger;

                if (result.err != "" && result.err != undefined) {
                    ErroreElaborazioneAjax(result.err);
                }
                else {

                    InfoElaborazioneAjax(result.msg);
                    //CloseTimeModalFormulario();
                    //TabElencoFormulari();
                    PulsantiNotificaAttivaMagFam();
                }
            },
            complete: function () {
                //$("#btUpload").removeAttr("disabled");
            },
            error: function (error) {
                //debugger;

                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });
    }

    $("#ModalEliminaFormularioMF").on("hidden.bs.modal", function () {
        //debugger;
        //TabElencoFormulari();
        ElencoFormulariInseriti();
    });
</script>

