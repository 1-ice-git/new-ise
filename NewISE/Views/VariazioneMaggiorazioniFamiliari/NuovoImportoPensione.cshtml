@model NewISE.Models.DBModel.PensioneConiugeModel

<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@{
    decimal idConiuge = Convert.ToDecimal(ViewData["idConiuge"]);
    var errori = ViewData.ModelState;
}

<div style="padding-left:15px; padding-right:10px;">
    @using (@Ajax.BeginForm("InserisciImportoPensione", "VariazioneMaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFamiliari", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { id = "formNewPensione" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("idConiuge", idConiuge)

        <div class="form-horizontal">
            <h4>Nuova Pensione Coniuge</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.dataInizioValidita, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @if (Model != null && Model.dataInizioValidita > DateTime.MinValue)
                    {
                        @Html.TextBoxFor(model => model.dataInizioValidita, String.Format("{0:dd/MM/yyyy}", Model.dataInizioValidita), new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.dataInizioValidita, new { @class = "form-control" })
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.dataFineValidita, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @if (Model != null && Model.dataFineValidita.HasValue)
                    {
                        @Html.TextBoxFor(model => model.dataFineValidita, string.Format("{0:dd-MM-yyyy}", Model.dataFineValidita), new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.dataFineValidita, new { @class = "form-control" })
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.importoPensione, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @if (Model != null)
                    {
                        <div style="width:120px;">
                            @Html.TextBoxFor(model => model.importoPensione, string.Format("{0:N2}", Model.importoPensione), new { @class = "form-control text-right" })
                        </div>
                    }
                    else
                    {
                        <div style="width:120px;">
                            @Html.TextBoxFor(model => model.importoPensione, new { @class = "form-control text-right" })
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-offset-2 col-xs-10">
                    <input type="submit" value="Salva" class="btn btn-default" />
                </div>
            </div>
        </div>

        <div class="modal fade" id="ModalErrorNewImpPensione" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                    </div>
                    <div class="modal-body alert alert-warning text-warning">
                        <p id="msgModalWarning" class="text-warning">
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div style="padding-left: 15px;">
    @Ajax.ActionLink("Torna indietro", "ElencoPensioniConiuge", "VariazioneMaggiorazioniFamiliari", new { idConiuge = idConiuge }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFamiliari", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>

<script type="text/javascript">

    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
            break;
        }

    }

    function DialogModalError(err) {
        //debugger;
        if (err == 'True') {
            $('#ModalErrorNewImpPensione').modal('toggle');
        }
    }

    $('#formNewPensione').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }
        else {
            var ip = $("#importoPensione").autoNumeric("get");
            $("#importoPensione").val(ip.replace(".", ","));
        }
    });

    $('#dataInizioValidita').datepicker({
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });

    $('#dataFineValidita').datepicker({
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });

    $("#importoPensione").autoNumeric('init',
    {
        aSep: '.',
        aDec: ',',
        aSign: ''
    });

    $.culture = Globalize.culture("it-IT");

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || !isNaN(Globalize.parseFloat(value));
    };

</script>
