@model NewISE.Models.DBModel.ConiugeModel

<link href="~/Content/css/NuovoConiuge.css" rel="stylesheet" />
<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@{
    decimal idMaggiorazioniFamiliari = Convert.ToDecimal(ViewData["idMaggiorazioniFamiliari"]);
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
    decimal idAttivazioneMagFam = Convert.ToDecimal(ViewData["idAttivazioneMagFam"]);
    var errori = ViewData.ModelState;
}

<style>
    div .col-xs-10 {
        padding-right: 25px;
    }
</style>

@using (@Ajax.BeginForm("ConfermaNuovoConiuge", "VariazioneMaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFamiliari", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formAddConiuge" }))
{
    @Html.AntiForgeryToken()
    <div style="padding-left: 15px;padding-right:50px">
        <div class="form-horizontal">
            <h4>Inserire Dati Coniuge</h4>
            <hr />
            @*-@Html.HiddenFor(model => model.idConiuge)
            
            -@Html.HiddenFor(model => model.idMaggiorazioniFamiliari)
            -@Html.HiddenFor(model => model.idPassaporti)
            -@Html.HiddenFor(model => model.idTitoloViaggio)
            -@Html.HiddenFor(model => model.Modificato)
            -@Html.HiddenFor(model => model.FK_idConiuge)
            
            -@Html.HiddenFor(model => model.escludiTitoloViaggio)
            -@Html.HiddenFor(model => model.escludiPassaporto)
            -@Html.HiddenFor(model => model.dataAggiornamento )*@

            @Html.Hidden("idMaggiorazioniFamiliari", idMaggiorazioniFamiliari)
            @Html.Hidden("idAttivazioneMagFam", idAttivazioneMagFam)


            <div class="row">
                <div class="col-xs-5" style="padding-top:5px; padding-bottom:5px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipologiaConiuge, new { @class = "control-label col-xs-4" })
                        <div class="select2-container select2-container--classic col-xs-8">
                            @Html.DropDownListFor(Model => Model.idTipologiaConiuge, ViewBag.lTipologiaConiuge as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.dataInizio, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.TextBoxFor(model => model.dataInizio, "{0:dd/MM/yyyy}", new { @class = "form-control col-xs-4" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.dataFine, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.TextBoxFor(Model => Model.dataFine, "{0:dd/MM/yyyy}", new { @class = "form-control col-xs-4" })
                        </div>
                    </div>
                </div>
                <div class="col-xs-5" style="padding-top:5px; padding-bottom:5px">

                    <div class="form-group">
                        @Html.LabelFor(Model => Model.nome, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.EditorFor(Model => Model.nome, new { htmlAttributes = new { @class = "form-control text-uppercase col-xs-4" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(Model => Model.cognome, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.EditorFor(Model => Model.cognome, new { htmlAttributes = new { @class = "form-control text-uppercase col-xs-4" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(Model => Model.codiceFiscale, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            @Html.EditorFor(Model => Model.codiceFiscale, new { htmlAttributes = new { @class = "form-control text-uppercase col-xs-4" } })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-4">
                        <input type="submit" value="Salva" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal fade" id="myModalErrorModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                </div>
                <div class="modal-body alert alert-warning text-warning">
                    <p id="msgModalWarning" class="text-warning">
                       @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="modal-footer">
                    <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>

}

<p style="padding-left: 15px;">
    @Ajax.ActionLink("Torna indietro", "ElencoFamiliari", "VariazioneMaggiorazioniFamiliari", new { idMaggiorazioniFamiliari = idMaggiorazioniFamiliari }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFamiliari", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
</p>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>


<script type="text/javascript">

    //PulsantiNotificaAttivaMagFam();

    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
            break;
        }

    }

    $("#idTipologiaConiuge").select2({
        placeholder: "Seleziona la tipologia coniuge",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $('#dataInizio').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

    $('#dataFine').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

    $('#formAddConiuge').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }

    });

    function DialogModalError(err) {
        //debugger;

        if (err == 'True') {
            $('#myModalErrorModel').modal('toggle');
        }
    }

</script>


