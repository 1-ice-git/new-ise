@using NewISE.Models.DBModel
@model IEnumerable<NewISE.Models.ViewModel.ElencoFamiliariModel>

@{
    decimal idMaggiorazioniFamiliari = Convert.ToDecimal(ViewData["idMaggiorazioniFamiliari"]);
    bool solaLettura = Convert.ToBoolean(ViewData["solaLettura"]);
}



<p style="padding-left: 15px;">
    @if (Model?.Any() ?? false)
    {
        if (solaLettura)
        {
            <button href="#" class="btn btn-default disabled" disabled="disabled">Modifica coniuge</button>
        }
        else
        {
            @Ajax.ActionLink("Modifica coniuge", "ModificaConiuge", "MaggiorazioniFamiliari", new { idConiuge = Model.First().idFamiliare }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-success", @title = "Modifica il coniuge", @id = "linkEditConiuge" })
        }

    }
    else
    {
        if (solaLettura)
        {
            <button href="#" class="btn btn-default disabled" disabled="disabled">Nuovo coniuge</button>
        }
        else
        {
            @Ajax.ActionLink("Nuovo coniuge", "NuovoConiuge", "MaggiorazioniFamiliari", new { idMaggiorazioniFamiliari = idMaggiorazioniFamiliari }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-success", @title = "Inserisci il coniuge", @id = "linkNewConiuge" })
        }

    }

</p>
<div style="padding-left: 15px; padding-right: 5px; padding-top: 10px;">

    <table id="tabElencoConiuge" cellspacing="0">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nominativo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CodiceFiscale)
                </th>
                <th style="text-align: center;">
                    @Html.DisplayNameFor(model => model.dataInizio)
                </th>
                <th style="text-align: center;">
                    @Html.DisplayNameFor(model => model.dataFine)
                </th>
                <th style="text-align: center;">
                    Pens.
                </th>
                <th style="text-align: center;">
                    Alt. dati
                </th>
                <th style="text-align: center;">
                    Doc.
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>

                    <td>
                        <span class="text-uppercase">@Html.DisplayFor(modelItem => item.Nominativo)</span>
                    </td>
                    <td>
                        <span class="text-uppercase">@Html.DisplayFor(modelItem => item.CodiceFiscale)</span>
                    </td>
                    <td style="text-align: center;">
                        @Html.DisplayFor(modelItem => item.dataInizio)
                    </td>
                    @if (item.dataFine.HasValue && item.dataFine.Value < Convert.ToDateTime("31/12/9999"))
                    {
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.dataFine)
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;"></td>
                    }
                    @if (item.HasPensione)
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" Pensione(@item.idFamiliare); " id="linkPensione">
                                <img src='~/Immagini/Simbolo semplice Euro Green.png' width='30' title="Pensione" />
                            </a>
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" Pensione(@item.idFamiliare); " id="linkPensione">
                                <img src="~/Immagini/Simbolo semplice Euro Red.png" width="30" title="Pensione" />
                            </a>
                        </td>
                    }
                    @if (item.idAltriDati > 0)
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" AltriDatiFamiliari(@item.idFamiliare);" id="linkAltriDatiFam">
                                <img src="~/Immagini/Plus_Green.png" width="30" title="Altri Dati Familiari" />
                            </a>
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" AltriDatiFamiliari(@item.idFamiliare); " id="linkAltriDatiFam">
                                <img src="~/Immagini/Plus_Red.png" width="30" title="Altri Dati Familiari" />
                            </a>
                        </td>
                    }

                    @if (item.Documenti.Any())
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" ElencoDocumenti(@item.idFamiliare, @Convert.ToDecimal(item.Documenti.First().tipoDocumento) , @Convert.ToDecimal(item.parentela) , @Convert.ToDecimal(EnumChiamante.Maggiorazioni_Familiari) , @idMaggiorazioniFamiliari ) ">
                                <img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" />
                            </a>
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" ElencoDocumenti(@item.idFamiliare, 10, @Convert.ToDecimal(item.parentela) ,@Convert.ToDecimal(EnumChiamante.Maggiorazioni_Familiari), @idMaggiorazioniFamiliari ) ">
                                <img class="SfondoBordoImg" src="~/Immagini/IconeDocumenti/PDF-icon-Disable.png" width="30" title="Documenti" />
                            </a>
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
</div>

@*<div class="modal fade " id="DocModal" tabindex="-1" role="dialog" aria-labelledby="DocModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h3 class="modal-title alert alert-info text-info" id="notificaModelLabel">Documenti</h3>
                </div>
                <div class="modal-body alert alert-info text-info" style="font-size: 1em;">
                    <p id="viewDocumento">
                        <img src="~/Immagini/Loading/ajax-loader (1).gif" />
                    </p>
                </div>
                <div class="modal-footer">
                    <button id="btUpload" type="button" class="btn btn-info" onclick="">Salva</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Annulla</button>
                </div>
            </div>
        </div>
    </div>*@
<script type="text/javascript">

    $("#tabElencoConiuge").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        },
        "info": false,
        "lengthChange": false,
        "pageLength": 5,
        "searching": false,
        "paging": false,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        //dom: 'Bfrtip',
        //buttons: [
        //    {
        //        text: 'Nuovo Coniuge',
        //        className: 'green',
        //        action: function (e, dt, node, config) {
        //            NuovoConiuge();
        //        }
        //    }
        //],
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "visible": false,
        //        "searchable": false
        //    },

        //]
    });

    PulsantiNotificaAttivaMagFam();


    function Pensione(idConiuge) {
        //debugger;
        var rotta = "/PensioneConiuge/ElencoPensioniConiuge";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idConiuge: idConiuge },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //$('#ModalPensione').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#tabConiuge").empty();
                $("#tabConiuge").html(result);

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

    function AltriDatiFamiliari(idConiuge) {
        //debugger;
        var rotta = "/AltriDatiFamiliari/AltriDatiFamiliariConiuge";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idConiuge: idConiuge },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //$('#ModalPensione').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#tabConiuge").empty();
                $("#tabConiuge").html(result);

            },
            complete: function () {
                PulsantiNotificaAttivaMagFam();
            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

    function DocumentoConiuge(idMagConiuge) {
        //debugger;
        var rotta = "/Documenti/NuovoDocumento";
        var TipoDocumento = 10 //Equivale a documento familiare (Coniuge)


        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { tipoDoc: TipoDocumento, id: idMagConiuge },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();

            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#tabConiuge").empty();
                $("#tabConiuge").html(result);

            },
            complete: function () {
                PulsantiNotificaAttivaMagFam();
            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

    function ElencoDocumenti(id, tipoDoc, idParentela, chiamante, idMaggiorazioniFamiliari) {
        //debugger;
        var rotta = "/Documenti/ElencoDocumenti";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { id: id, tipoDoc: tipoDoc, parentela: idParentela, chiamante: chiamante, idMaggiorazioniFamiliari: idMaggiorazioniFamiliari },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();

                //$('#DocModal').modal('show');
            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#tabConiuge").empty();
                $("#tabConiuge").html(result);

            },
            complete: function () {
                PulsantiNotificaAttivaMagFam();
            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }




    //   function DocumentoModal() {
    //    //debugger;
    //    var rotta = "/Documenti/LetteraDiTrasferimento";
    //    var idTrasferimento = parseInt($("#idTrasferimento").val());

    //    $.ajax({
    //        url: rotta,
    //        type: "POST", //Le info testuali saranno passate in POST
    //        data: { idTrasferimento: idTrasferimento },
    //        dataType: 'html',
    //        async: false,
    //        beforeSend: function () {
    //            //debugger;
    //            VerificaAutenticazione();
    //            $('#inviaDocModal').modal('show');
    //            //Blocca();

    //        },
    //        success: function (result) {
    //            //debugger;
    //            $("#viewDocumento").empty();
    //            $("#viewDocumento").html(result);

    //        },
    //        error: function (error) {
    //            //debugger;
    //            //Sblocca();
    //            var msg = error.responseText;
    //            ErroreElaborazioneAjax(msg);
    //        }
    //    });

    //}
</script>