@using NewISE.Models.DBModel
@model NewISE.Models.DBModel.ConiugeModel

<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>

@{

    var errori = ViewData.ModelState;

    TrasferimentoModel tm = (TrasferimentoModel)ViewData["Trasferimento"];
    decimal idAttivazioneMagFam = Convert.ToDecimal(ViewData["idAttivazioneMagFam"]);

}

<style>
    div .col-xs-10 {
        padding-right: 25px;
    }
</style>

@using (@Ajax.BeginForm("ConfermaModificaConiuge", "MaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formEditConiuge" }))
{
    @Html.AntiForgeryToken()
    <div style="padding-left: 15px;">
        <div class="form-horizontal">
            <h4>Modifica del Coniuge</h4>
            <hr />
            @*@Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
            @Html.HiddenFor(model => model.idConiuge)
            @Html.HiddenFor(model => model.idMaggiorazioniFamiliari)
            @Html.Hidden("idAttivazioneMagFam", idAttivazioneMagFam)

            <div class="form-group">
                @Html.LabelFor(model => model.idTipologiaConiuge, new { @class = "control-label col-xs-2" })
                <div class="select2-container select2-container--classic col-xs-10">
                    @Html.DropDownList("idTipologiaConiuge", ViewBag.lTipologiaConiuge as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                </div>
                @*@Html.ValidationMessageFor(model => model.idTipologiaConiuge, "", new { @class = "text-danger" })*@

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataInizio, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.TextBoxFor(model => model.dataInizio, "{0:dd/MM/yyyy}", new { @class = "form-control", placeholder = tm.dataPartenza.ToShortDateString() })
                    @*@Html.ValidationMessageFor(model => model.dataInizio, "", new {@class = "text-danger"})*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataFine, htmlAttributes: new { @class = "control-label col-xs-2" })

                @if (Model.dataFine.HasValue && Model.dataFine.Value < Convert.ToDateTime("31/12/9999"))
                {
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.dataFine, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.dataFine, "", new {@class = "text-danger"})*@
                    </div>
                }
                else
                {
                    <div class="col-xs-10">
                        @Html.TextBox("dataFine", "", "{0:dd/MM/yyyy}", new { @class = "form-control" })
                    </div>

                }
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.nome, "", new {@class = "text-danger"})*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.cognome, "", new {@class = "text-danger"})*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codiceFiscale, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.codiceFiscale, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.codiceFiscale, "", new {@class = "text-danger"})*@
                </div>
            </div>


            <div class="form-group">
                <div class="col-xs-offset-2 col-xs-10">
                    <input type="submit" value="Modifica" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myModalErrorModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                </div>
                <div class="modal-body alert alert-warning text-warning">
                    <p id="msgModalWarning" class="text-warning">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="modal-footer">
                    <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>

}

<p style="padding-left: 15px;">
    @Ajax.ActionLink("Torna indietro", "ElencoConiuge", "MaggiorazioniFamiliari", new { idAttivazioneMagFam = idAttivazioneMagFam }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
</p>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/MyValidateDate.js"></script>


<script type="text/javascript">

    PulsantiNotificaAttivaMagFam();

    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
                        break;
        }

    }

    $("#idTipologiaConiuge").select2({
        placeholder: "Seleziona la tipologia coniuge",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $('#dataInizio').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });

    $('#dataFine').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
        changeMonth: true,
        changeYear: true,
    });

    $('#formEditConiuge').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }

    });

    function DialogModalError(err) {
        //debugger;

        if (err == 'True') {
            $('#myModalErrorModel').modal('toggle');
        }
    }

</script>