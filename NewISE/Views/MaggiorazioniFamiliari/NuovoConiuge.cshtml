@model NewISE.Models.ViewModel.MaggiorazioneConiugeVModel
@using System.Web.Optimization

<link href="~/Content/css/NuovoConiuge.css" rel="stylesheet" />

@{
    //decimal idTrasferimento = Convert.ToDecimal(ViewBag.idTrasferimento);

    //ModelError m = new ModelError();

    var errori = ViewData.ModelState;
    //bool nErr = false;

    foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
            break;
        }

    }

}

@using (@Ajax.BeginForm("InserisciConiuge", "MaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabNuovoTrasferimento", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formNewConiuge" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.HiddenFor(model => model.idTrasferimento)

        <div class="panel panel-body" style="padding-left:5px; padding-right:5px; margin-right:10px; margin-top:5px;">
            <div class="form-group">

                <div id="divCombo" class="col-xs-4">
                    @Html.LabelFor(model => model.idTipologiaConiuge, new { @class = "control-label" })
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipologiaConiuge", ViewBag.lTipologiaConiuge as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.idTipologiaConiuge, "", new { @class = "text-danger" })*@
                </div>

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.dataInizioValidita, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.dataInizioValidita, new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.dataFineValidita, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.dataFineValidita, new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.dataFineValidita, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.nome, new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.cognome, new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-xs-3 ">
                    @Html.LabelFor(model => model.codiceFiscale, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.codiceFiscale, new { @class = "form-control text-uppercase" })
                        @*@Html.ValidationMessageFor(model => model.codiceFiscale, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>

        </div>

        <div class="panel panel-body" style="padding-left:5px; padding-right:5px; margin-right:10px;">
            <div class="form-group">
                <div class="col-xs-12">
                    <div class="text-center">
                        <input type="submit" value="Inserisci" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myModalErrorModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                </div>
                <div class="modal-body alert alert-warning text-warning">
                    <p id="msgModalWarning" class="text-warning">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="modal-footer">
                    <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Torna indietro", "Index")
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    $("#idTipologiaConiuge").select2({
        placeholder: "Seleziona la tipologia del coniuge",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $('#dataInizioValidita').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

    $('#dataFineValidita').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

    //$("#importoPensione").autoNumeric('init',
    //{
    //    aSep: '.',
    //    aDec: ',',
    //    aSign: ''
    //});

    //$.validator.methods.number = function (value, element) {
    //    return this.optional(element) || !isNaN(Globalize.parseFloat(value));
    //};

    function DialogModalError(err) {
        //debugger;

        if (err == 'True') {
            $('#myModalErrorModel').modal('toggle');
        }
    }

    $('#formNewConiuge').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }

    });
</script>