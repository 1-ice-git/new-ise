@using System.Diagnostics
@model NewISE.Models.ViewModel.Figli_V_Model

<link href="~/Content/css/NuovoFiglio.css" rel="stylesheet" />

@{

    decimal idMaggiorazioneFamiliari = Convert.ToDecimal(ViewData["idMaggiorazioneFamiliari"]);

    var errori = ViewData.ModelState;
}


@using (@Ajax.BeginForm("InserisciFiglio", "MaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFiglio", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formNewFiglio" }))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("idMaggiorazioneFamiliari", idMaggiorazioneFamiliari)



    <div style="padding-right: 15px;">
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.idTipologiaFiglio, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipologiaFiglio", ViewData["lTipologiaFiglio"] as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                        @*@Html.ValidationMessageFor(model => model.idTipologiaFiglio, "", new { @class = "text-danger" })*@
                    </div>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codiceFiscale, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.codiceFiscale, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @*@Html.ValidationMessageFor(model => model.codiceFiscale, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataInizio, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.TextBoxFor(model => model.dataInizio, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataFine, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.TextBoxFor(model => model.dataFine, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.dataInizioValidita, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                <div class="col-xs-offset-2 col-xs-10">
                    <input type="submit" value="Inserisci" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myModalError" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title alert alert-warning text-warning" id="myModalLabel">Attenzione!!!</h4>
                </div>
                <div class="modal-body alert alert-warning text-warning">
                    <p id="msgModalWarning" class="text-warning">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="modal-footer">
                    <button id="btProcedi" type="button" class="btn btn-warning" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>

}




<p style="padding-left: 15px;">
    @Html.ActionLink("Back to List", "Index")
</p>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<script type="text/javascript">
    @foreach (var e in errori)
    {

        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
                                                break;
        }

    }

    function DialogModalError(err) {
        //debugger;

        if (err == 'True') {
            $("#myModalError").modal('toggle');
        }
    }

    $('#formNewFiglio').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }

    });

    $("#idTipologiaFiglio").select2({
        placeholder: "Seleziona la tipologia figlio",
        allowClear: true,
        language: "it",
        width: '200'

    });

    $('#dataInizio').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

    $('#dataFine').datepicker({
        //showButtonPanel: true,
        showAnim: "slide",
    });

</script>
