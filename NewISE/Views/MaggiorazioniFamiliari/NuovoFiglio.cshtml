@model NewISE.Models.ViewModel.Figli_V_Model

<link href="~/Content/css/NuovoFiglio.css" rel="stylesheet" />

@{
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
    decimal idMaggiorazioneFigli = Convert.ToDecimal(ViewData["idMaggiorazioneFigli"]);

    var errori = ViewData.ModelState;
}


@using (@Ajax.BeginForm("InserisciFiglio", "MaggiorazioniFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabFiglio", OnFailure = "ErroreElaborazioneAjax" }, new { id = "formNewFiglio" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.idMaggiorazioneFigli)


    <div style="padding-left:15px;">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.idTipologiaFiglio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="select2-container select2-container--classic">
                        @Html.DropDownList("idTipologiaFiglio", ViewData["lTipologiaFiglio"] as IEnumerable<SelectListItem>, new { @class = "form-control select2 select2-select", @onchange = "" })
                        @Html.ValidationMessageFor(model => model.idTipologiaFiglio, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codiceFiscale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.codiceFiscale, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @Html.ValidationMessageFor(model => model.codiceFiscale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

}




<p>
    @Html.ActionLink("Back to List", "Index")
</p>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    @foreach (var e in errori)
    {
        if (e.Value.Errors.Count > 0)
        {
            @:DialogModalError('True');
                        break;
        }

    }

    function DialogModalError(err) {
        //debugger;

        if (err == 'True') {
            $('#myModalErrorModel').modal('toggle');
        }
    }

    $('#formNewFiglio').submit(function () {
        //debugger;
        var form = $(this);
        if (!form.valid()) {
            DialogModalError('True');
        }

    });

    $("#idTipologiaFiglio").select2({
        placeholder: "Seleziona la tipologia figlio",
        allowClear: true,
        language: "it",
        width: '200'

    });

</script>
