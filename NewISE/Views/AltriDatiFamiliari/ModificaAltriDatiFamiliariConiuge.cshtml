@using NewISE.DBComuniItalia
@model NewISE.Models.DBModel.AltriDatiFamModel


@{
    List<Comuni> comuni = (List<Comuni>)ViewData["Comuni"];
    var idMaggiorazioniFamiliari = Convert.ToDecimal(ViewData["idMaggiorazioniFamiliari"]);
}

<link href="~/Content/css/CheckBoxRadio.css" rel="stylesheet" />

<script src="~/Scripts/globalize.0.1.3/globalize.js"></script>
<script src="~/Scripts/globalize.0.1.3/cultures/globalize.culture.it-IT.js"></script>


@using (@Ajax.BeginForm("ConfermaModificaAdf", "AltriDatiFamiliari", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }, new { id = "formEditADF" }))
{
    @Html.AntiForgeryToken()
    <div style="padding-left: 15px;">
        <div class="form-horizontal">
            <h4>Modifica Altri Dati Familiari</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idAltriDatiFam)
            @Html.HiddenFor(model => model.idConiuge)


            <div class="form-group">
                @Html.LabelFor(model => model.dataNascita, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.dataNascita, "{0:dd/MM/yyyy}", new { @class = "form-control", @style = "max-width:100px;", @placeholder = "gg/mm/aaaa" })
                    @Html.ValidationMessageFor(model => model.dataNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.capNascita, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.capNascita, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:100px;", @list = "ListaCap" } })
                    @Html.ValidationMessageFor(model => model.capNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.comuneNascita, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.comuneNascita, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:250px;", @list = "ListaComuni" } })
                    @Html.ValidationMessageFor(model => model.comuneNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.provinciaNascita, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.provinciaNascita, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:250px;", @list = "ListaProvincie" } })
                    @Html.ValidationMessageFor(model => model.provinciaNascita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nazionalita, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nazionalita, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:250px;" } })
                    @Html.ValidationMessageFor(model => model.nazionalita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.indirizzoResidenza, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.indirizzoResidenza, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                    @Html.ValidationMessageFor(model => model.indirizzoResidenza, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.capResidenza, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.capResidenza, new { htmlAttributes = new { @class = "form-control", @style = "max-width:100px;", @list = "ListaCap" } })
                    @Html.ValidationMessageFor(model => model.capResidenza, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.comuneResidenza, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.comuneResidenza, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:250px;", @list = "ListaComuni" } })
                    @Html.ValidationMessageFor(model => model.comuneResidenza, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.provinciaResidenza, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.provinciaResidenza, new { htmlAttributes = new { @class = "form-control text-uppercase", @style = "max-width:250px;", @list = "ListaProvincie" } })
                    @Html.ValidationMessageFor(model => model.provinciaResidenza, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.residente, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.residente)
                {
                        <div class="checkbox disabled">
                            <label style="font-size: 1.5em">
                                <input type="checkbox" value="" disabled="disabled" checked="checked">
                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="checkbox disabled">
                            <label style="font-size: 1.5em">
                                <input type="checkbox" value="" disabled="disabled">
                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                            </label>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ulterioreMagConiuge, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.ulterioreMagConiuge)
                {
                        <div class="checkbox disabled">
                            <label style="font-size: 1.5em">
                                <input type="checkbox" value="" disabled="disabled" checked="checked">
                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="checkbox disabled">
                            <label style="font-size: 1.5em">
                                <input type="checkbox" value="" disabled="disabled">
                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                            </label>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Modifica" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

}

<p style="padding-left: 15px;">
    @Ajax.ActionLink("Torna indietro", "AltriDatiFamiliariConiuge", "AltriDatiFamiliari", new { idConiuge = Model.idConiuge }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })
</p>
@if (comuni != null && comuni.Any())
{
    <datalist id="ListaComuni">

        @foreach (var d in comuni.OrderBy(a => a.nome).ToList())
        {
            <option value="@d.nome" />
        }
    </datalist>

    <datalist id="ListaProvincie">
        @foreach (var d in comuni.GroupBy(a => a.provincia.nome).Select(a => a.First()).OrderBy(a => a.provincia.nome))
        {
            <option value="@d.provincia.nome" />
        }
    </datalist>
    <datalist id="ListaCap">
        @foreach (var d in comuni)
        {
            foreach (var item in d.cap.Distinct().OrderBy(a => a.ToString()))
            {
                <option value="@item.ToString()" />
            }
        }
    </datalist>
}


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $.culture = Globalize.culture("it-IT");
    $.validator.methods.date = function (value, element) {
        return this.optional(element) || Globalize.parseDate(value, "dd/MM/yyyy", "it-IT");
    }
</script>