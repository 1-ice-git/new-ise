@model NewISE.Models.DBModel.AltriDatiFamModel

@{
    decimal idMaggiorazioniFamiliari = Convert.ToDecimal(ViewData["idMaggiorazioniFamiliari"]);
    //decimal idMaggiorazioneConiuge = Convert.ToDecimal(ViewData["idMaggiorazioneConiuge"]);

    //decimal idConiuge = Convert.ToDecimal(ViewData["idConiuge"]);


}



<div style="padding-left: 15px;">
    <h4>Altri Dati Familiari</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Coniuge.nominativo)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.Coniuge.nominativo)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.dataNascita)
        </dt>
        @if (Model.dataNascita.HasValue)
        {
            <dd>
                <span class="text-uppercase">@Model.dataNascita.Value.ToShortDateString()</span>
            </dd>
        }
        else
        {
            <dd></dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.capNascita)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.capNascita)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.comuneNascita)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.comuneNascita)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.provinciaNascita)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.provinciaNascita)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.nazionalita)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.nazionalita)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.indirizzoResidenza)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.indirizzoResidenza)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.capResidenza)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.capResidenza)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.comuneResidenza)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.comuneResidenza)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.provinciaResidenza)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.provinciaResidenza)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.residente)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.residente)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ulterioreMagConiuge)
        </dt>

        <dd>
            <span class="text-uppercase">@Html.DisplayFor(model => model.ulterioreMagConiuge)</span>
        </dd>

    </dl>
</div>
<p style="padding-left: 15px;">
    @Ajax.ActionLink("Modifica", "ModificaAltriDatiFamiliariConiuge", "AltriDatiFamiliari", new { idAltriDatiFam = Model.idAltriDatiFam, idMaggiorazioniFamiliari = idMaggiorazioniFamiliari }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace }) |
    @Ajax.ActionLink("Torna indietro", "ElencoConiuge", "MaggiorazioniFamiliari", new { idMaggiorazioniFamiliari = idMaggiorazioniFamiliari }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tabConiuge", OnFailure = "ErroreElaborazioneAjax", InsertionMode = InsertionMode.Replace })

</p>
