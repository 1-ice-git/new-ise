@model IEnumerable<NewISE.Models.ViewModel.LiquidazioniDiretteViewModel>

@{
    decimal idAnnoMeseElaborato = (decimal)ViewData["idAnnoMeseElaborato"];
}

<div id="dialogRptLiqDiretteInviate"></div>

<div class="row animated fadeInRightBig">
    <div class="col-xs-12">
        <div class="row">

            <div class="col-xs-1">
                <a id="btLiquidazioniDirette" class="btn btn-small btn-default" href="#" title="Stampa delle liquidazioni dirette inviate">
                    <i aria-hidden="true" class="fa fa-2x fa-print"></i>
                </a>
            </div>
            <div class="col-xs-11">
                <div class="text-center">
                    <label class="text-info" style="font-size: 14px;">Liquidazioni dirette</label>
                </div>
            </div>


        </div>

        <table id="TabLiquidazioniDiretteInviate" cellspacing="0" class="table DimensioneFontTable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Nominativo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Voci.descrizione)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Voci.codiceVoce)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Importo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Data)
                    </th>

                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nominativo)
                        </td>
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.Voci.descrizione)
                        </td>
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.Voci.codiceVoce)
                        </td>
                        <td style="text-align: right;">
                            @Html.DisplayFor(modelItem => item.Importo)
                        </td>
                        <td style="text-align: center;">
                            @Html.DisplayFor(modelItem => item.Data)
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script type="text/javascript">
    var tableInviate = $("#TabLiquidazioniDiretteInviate").DataTable({

        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }

        },
        "info": false,
        "lengthChange": false,
        "pageLength": 5,
        "searching": true,
        "paging": false,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        "scrollY": 110,
        "scrollCollapse": true,
        "autoWidth": false,
        "fixedHeader": {
            header: true,
            footer: false
        },
        "columnDefs": [
           { "targets": [4], "type": 'date-euro' },
           { "targets": [3], "orderable": false }
        ]
        //"columnDefs": [
        //        {
        //            "targets": 'no-sort',
        //            "orderable": false,

        //        }
        //],
        //"order": [[0,"desc"],[2, "desc"]]

    });

    var windowWidth = $(window).width();
    var windowHeight = $(window).height();


    $("#dialogRptLiqDiretteInviate").dialog({
        autoOpen: false,
        show: {
            //effect: "blind",
            //duration: 1000
        },
        hide: {
            //effect: "explode",
            //duration: 1000
        },
        close: function (event, ui) {
            $('.container').removeClass("NoOverflow");
        },
        height: windowHeight, width: windowWidth


    });

    $("#btLiquidazioniDirette").on("click", function () {
        //debugger;

        var rottaVer = "/Elaborazioni/VerificaPresenzaDatiLiquidazioneDiretta";

        var idAnnoMeseElaborato = @idAnnoMeseElaborato;

        $.ajax({
            type: "POST",
            url: rottaVer,
            data: { idAnnoMeseElaborato: idAnnoMeseElaborato, Elab: true },
            async: false,
            dataType: 'json',
            beforeSend: function () {
                //debugger;
            },
            success: function (result) {
                //debugger;
                if (result.err != "") {
                    ErroreElaborazioneAjax(result.err);
                } else {
                    if (result.verDati) {

                        $('.container').addClass("NoOverflow");

                        $("#dialogRptLiqDiretteInviate").dialog("open");
                        $("#dialogRptLiqDiretteInviate").css("background-color", "#ffffff");

                        var rotta = "/Elaborazioni/ReportLiquidazioniDirette";

                        $.ajax({
                            type: "POST",
                            url: rotta,
                            data: { idAnnoMeseElaborato: idAnnoMeseElaborato, Elab: true },
                            dataType: 'html',
                            beforeSend: function () {
                                //debugger;
                                $("#dialogRptLiqDiretteInviate").empty();

                            },
                            success: function (result) {
                                //debugger;
                                $("#dialogRptLiqDiretteInviate").html(result);


                            },
                            complete: function () {
                                //$("#divEffettoLoadAutNoDoc").hide("slow");
                                //                $("#Centro").getNiceScroll().resize();
                            },
                            error: function (jqXHR, textStatus, errorThrow) {
                                //debugger;
                                var msg = errorThrow.err;
                                ErroreElaborazioneAjax(msg);
                            }

                        });
                    } else {
                        InfoElaborazioneAjax("Non sono presenti dati per effettuare la stampa.");
                    }
                }
            },
            complete: function () {

            },
            error: function (jqXHR, textStatus, errorThrow) {
                //debugger;
                var msg = errorThrow.err;
                ErroreElaborazioneAjax(msg);
            }
        });

    });

</script>