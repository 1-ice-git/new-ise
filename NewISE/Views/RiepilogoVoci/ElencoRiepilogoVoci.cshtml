@model IEnumerable<NewISE.Models.DBModel.RiepiloVociModel>
@using NewISE.Models.DBModel

@{
    decimal idTrasferimento = (decimal)ViewData["idTrasferimento"];
 }

@Html.Hidden("hidTrasferimento")

<div class="row">
    <div class="col-md-12">
        <div style="padding-bottom:10px;margin-right:20px;border-bottom:solid;border-width:1px;border-color:limegreen">
            <h4>Elenco Riepilogo Voci</h4>



        </div>
    </div>
</div>

<div style="margin: 15px"></div>

<table id="tbRiepilogoVoci" class="display" cellspacing="0">
    <thead>
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.dataOperazione)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.descrizione)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.importo)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.TipoLiquidazione.descrizione)
            </th>
           
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="text-align:center;">
                    @Html.DisplayFor(modelItem => item.dataOperazione)
                </td>
                <td style="text-align:center;">
                    @Html.DisplayFor(modelItem => item.descrizione)
                </td>
                <td style="text-align:center;">
                    @Html.DisplayFor(modelItem => item.importo)
                </td>
                <td style="text-align:center;">
                    @Html.DisplayFor(modelItem => item.TipoLiquidazione.descrizione)
                </td>

            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="pull-right" style="margin-top: 10px; margin-bottom: 10px;margin-right:35px ">

        <button class="btn btn-default btn-sm" onclick="DownloadReport();">
            <i aria-hidden="true" class="fa fa-2x fa-print"></i>
            Stampa
        </button>

    </div>
</div>

<div class="modal fade modal-fullscreen force-fullscreen" id="ModalReport" tabindex="-1" role="dialog" aria-labelledby="ModalReportLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:980px; align-content:center" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title alert alert-info text-info" id="DownloadReportLabel">Riepilogo Voci</h3>
            </div>
            <div class="modal-body">
                <div id="divRiepilogoVoci">
                    @*@Html.Action("RptRiepilogoVoci", "RiepilogoVoci")*@
                    
                    @Html.Action("RptRiepilogoVoci", "RiepilogoVoci", new { idTrasferimento = idTrasferimento })
                    @*@Ajax.ActionLink("Riepilogo Voci", "RptRiepilogoVoci", "RiepilogoVoci", new { idTrasferimento = idTrasferimento }, new AjaxOptions { UpdateTargetId = "divOperazioniAttivitaIndennita", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnFailure = "ErroreElaborazioneAjax(this);" })*@
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $('tbRiepilogoVoci').DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            },
            "info": false,
            "lengthChange": false,
            "pageLength": 5,
            //"searching": false,
            "paging": true,
            "bJQueryUI": true,
            "sDom": 'lfrtip',
            "columnDefs": [
                    {
                        "targets": 'no-sort',
                        "orderable": false,

                    }
            ],
            "order": [[0, "desc"]]
        }
    });


    /* Custom filtering function which will search data in column four between two values */
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var min = parseInt($('#min').val(), 10);
            var max = parseInt($('#max').val(), 10);
            var age = parseFloat(data[1]) || 0; // use data for the age column

            if ((isNaN(min) && isNaN(max)) ||
                 (isNaN(min) && age <= max) ||
                 (min <= age && isNaN(max)) ||
                 (min <= age && age <= max)) {
                return true;
            }
            return false;
        }
    );

    $(document).ready(function () {
        var table = $('#tbRiepilogoVoci').DataTable();

        // Event listener to the two range filtering inputs to redraw on input
        $('#min, #max').keyup(function () {
            table.draw();
        });
    });

    function DownloadReport() {
        $('#ModalReport').modal().show();

    }

    function invia() {
        //debugger
        var idTrasferimento = $("#hidTrasferimento").val();

        window.location.href = "/RiepilogoVoci/RptRiepilogoVoci?idTrasferimento=" + idTrasferimento;
        target = "_blank";
    };

    function RptRiepilogoVoci() {
        //debugger;
        var rotta = "/RiepilogoVoci/RptRiepilogoVoci";

        var idTrasferimento = 0;

        if (!isNaN(idTrasf)) {
            idTrasferimento = idTrasf;
        } else {
            idTrasferimento = $("#hidTrasferimento").val();
        }
                 $.ajax({
                     type: "POST",
                     url: rotta,
                     data: { idTrasferimento: idTrasferimento },
                     dataType: 'html',
                     beforeSend: function () {
                         //debugger;
                         VerificaAutenticazione();
                     },
                     success: function (result) {
                         //debugger;

                         $("#divRiepilogoVoci").empty();
                         $("#divRiepilogoVoci").html(result);
                     },
                     complete: function () {
                     },
                     error: function (jqXHR, textStatus, errorThrow) {
                         //debugger;
                         var msg = errorThrow.err;
                         ErroreElaborazioneAjax(msg);
                     }

                 });

    }

</script>