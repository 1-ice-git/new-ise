@using NewISE.Models.DBModel
@using NewISE.Models.DBModel.Enum
@using NewISE.Models.Tools
@using NewISE.Models.ViewModel
@model IEnumerable<ElencoFamiliariPassaportoModel>
@{ 
    decimal idTrasferimento = Convert.ToDecimal(ViewData["idTrasferimento"]);
}

<div style="padding-left: 0px; padding-right: 5px; padding-top: 10px;">
    <h4>PRATICHE PASSAPORTO - Invio Passaporto</h4>
    <hr />
    <table cellspacing="0" id="tabElencoFamiliariPass" class="table-striped">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.nominativo)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.codiceFiscale)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.dataInizio)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.dataFine)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.parentela)
                </th>
                <th style="width: 20px;" class="text-center">
                    @Html.DisplayNameFor(model => model.idAltriDati)
                </th>

                <th class="text-center">
                    Doc. Iden.
                </th>
                <th class="text-center">
                    Doc. Passaporto
                </th>
                <th class="text-center">

                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.HiddenFor(modelItem => item.ordinamento) </td>
                    <td style="text-align: left;">
                        @Html.DisplayFor(modelItem => item.nominativo)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.codiceFiscale)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.dataInizio)
                    </td>
                    <td class="text-center">
                        @if (item.dataFine != Utility.DataFineStop())
                        {
                            @Html.DisplayFor(modelItem => item.dataFine)
                        }
                    </td>
                    <td class="text-center">
                        <span class="text-uppercase">@Html.DisplayFor(modelItem => item.parentela)</span>
                    </td>
                    @if (item.idAltriDati > 0)
                    {
                        switch (item.parentela)
                        {
                            case EnumParentela.Coniuge:
                                <td class="text-center">
                                    <a href="#" id="linkAltriDatiFam" onclick="AltriDatiFamiliariConiuge(@item.idAltriDati); ">
                                        <img src="~/Immagini/Plus_Green.png" title="Altri Dati Familiari" width="17" height="17" />
                                    </a>
                                </td>
                                break;
                            case EnumParentela.Figlio:
                                <td class="text-center">
                                    <a href="#" id="linkAltriDatiFam" onclick="AltriDatiFamiliariFiglio(@item.idAltriDati); ">
                                        <img src="~/Immagini/Plus_Green.png" title="Altri Dati Familiari" width="17" height="17" />
                                    </a>
                                </td>
                                break;
                            case EnumParentela.Richiedente:
                                <td class="text-center"></td>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    }
                    else
                    {
                        <td class="text-center"></td>
                    }

                    <td class="text-center">
                        <input id="hColElencoDocIdFamiliare" type="hidden" value="@item.idFamiliarePassaporto" />
                        <input id="hColElencoDocParentela" type="hidden" value="@Convert.ToDecimal(item.parentela)" />
                        <div id="divColElencoDoc">
                            @Html.Action("ColonnaElencoDoc", "PratichePassaporto", new { idAttivazionePassaporto = item.idAttivazionePassaporti, idFamiliarePassaporto = item.idFamiliarePassaporto, parentela = item.parentela})
                        </div>
                    </td>
                    <td class="text-center">
                        <div id="divColElencoDocPassaporti">
                            @Html.Action("ColonnaElencoDocPassaporti", "PratichePassaporto", new { idAttivazionePassaporto = item.idAttivazionePassaporti, idFamiliarePassaporto = item.idFamiliarePassaporto, parentela = item.parentela })
                        </div>
                    </td>
                    <td class="text-center">
                        @if (item.notificato==false && item.attivato==false)
                        {
                            <a href="#" onclick="UploadDocumentoPassaportoModal(@Convert.ToDecimal(item.HasDocPassaporto.tipoDocPassaporto),@idTrasferimento, @Convert.ToDecimal(item.parentela), @item.idFamiliarePassaporto );" id="uploadDocPassaporto">
                                @if (item.HasDocPassaporto.esisteDocPassaporto)
                                {
                                    <img src="~/Immagini/switch.png" width="17" title="Sostituisci Documento Passaporto" />
                                }
                                else
                                {
                                    <img src="~/Immagini/Plus_Green.png" width="17" title="Upload Documento Passaporto" />
                                }
                            </a>                   
                        }
                     </td>
                </tr>
            }
        </tbody>


    </table>
</div>



<script type="text/javascript">
    $("#tabElencoFamiliariPass").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        },
        "bSort": false,
        "bSortable": false,
        "columnDefs": [
            { "visible": false, "targets": [0] },
            { "orderable": false, "targets": [0] },
    ],
        "info": false,
        "lengthChange": false,
        "pageLength": 5,
        "searching": false,
        "paging": false,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        "order": [0]
        //"order": [[4, "desc"]]
    //dom: 'Bfrtip',
        //buttons: [
        //    {
        //        text: 'Nuovo Coniuge',
        //        className: 'green',
        //        action: function (e, dt, node, config) {
        //            NuovoConiuge();
        //        }
        //    }
        //],
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "visible": false,
        //        "searchable": false
        //    },

        //]
    });

</script>