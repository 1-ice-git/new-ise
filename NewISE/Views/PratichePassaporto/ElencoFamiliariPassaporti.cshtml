@using NewISE.Models.DBModel
@using NewISE.Models.ViewModel
@model IEnumerable<NewISE.Models.ViewModel.ElencoFamiliariModel>

<div style="padding-left: 15px; padding-right: 5px; padding-top: 10px;">
    <table cellspacing="0" id="tabElencoFamiliari">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nominativo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CodiceFiscale)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dataInizio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dataFine)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.parentela)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.idAltriDati)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.richiediPassaporto)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nominativo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CodiceFiscale)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dataInizio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dataFine)
                    </td>
                    <td>
                        @switch (item.parentela)
                        {
                            case EnumParentela.Coniuge:
                                <span>Coniuge</span>
                                break;
                            case EnumParentela.Figlio:
                                <span>Figlio</span>
                                break;
                            case EnumParentela.Richiedente:
                                <span>Richiedente</span>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </td>
                    @if (item.idAltriDati > 0)
                    {
                        switch (item.parentela)
                        {
                            case EnumParentela.Coniuge:
                                <td style="text-align: center;">
                                    <a href="#" id="linkAltriDatiFam" onclick=" AltriDatiFamiliariConiuge(@item.idFamiliare); ">
                                        <img src="~/Immagini/Plus_Green.png" title="Altri Dati Familiari" width="30" />
                                    </a>
                                </td>
                                break;
                            case EnumParentela.Figlio:
                                <td style="text-align: center;">
                                    <a href="#" id="linkAltriDatiFam" onclick=" AltriDatiFamiliariFiglio(@item.idFamiliare); ">
                                        <img src="~/Immagini/Plus_Green.png" title="Altri Dati Familiari" width="30" />
                                    </a>
                                </td>
                                break;
                            case EnumParentela.Richiedente:
                                <td></td>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    }
                    else
                    {
                        <td style="text-align: center;"></td>
                    }

                    <td>
                        @Html.CheckBoxFor(modelItem => item.richiediPassaporto)
                    </td>

                    @if (item.Documenti.Any())
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" ElencoDocumenti(@item.idFamiliare, @Convert.ToDecimal(EnumGruppiDoc.Viaggi) , @Convert.ToDecimal(item.Documenti.First().tipoDocumento) , @Convert.ToDecimal(item.parentela) , @item.idMaggiorazioniFamiliari ) ">
                                <img class="SfondoBordoImg" width="30px" height="30px" src="../../Immagini/IconeDocumenti/PDF-icon.png" />
                            </a>
                        </td>
                    }
                    else
                    {
                        <td style="text-align: center;">
                            <a href="#" onclick=" ElencoDocumenti(@item.idFamiliare,@Convert.ToDecimal(EnumGruppiDoc.Viaggi), 13, @Convert.ToDecimal(item.parentela) , @item.idMaggiorazioniFamiliari ) ">
                                <img class="SfondoBordoImg" src="~/Immagini/IconeDocumenti/PDF-icon-Disable.png" width="30" title="Documenti" />
                            </a>
                        </td>
                    }

                </tr>
            }
        </tbody>


    </table>
</div>

<script type="text/javascript">
    $("#tabElencoFamiliari").DataTable({
        "language": {
            "sEmptyTable": "Nessun dato presente nella tabella",
            "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
            "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
            "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
            "sInfoPostFix": "",
            "sInfoThousands": ".",
            "sLengthMenu": "Visualizza _MENU_ elementi",
            "sLoadingRecords": "Caricamento...",
            "sProcessing": "Elaborazione...",
            "sSearch": "Cerca:",
            "sZeroRecords": "La ricerca non ha portato alcun risultato.",
            "oPaginate": {
                "sFirst": "Inizio",
                "sPrevious": "Precedente",
                "sNext": "Successivo",
                "sLast": "Fine"
            },
            "oAria": {
                "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
            }
        },
        "info": false,
        "lengthChange": false,
        "pageLength": 5,
        "searching": false,
        "paging": false,
        "bJQueryUI": true,
        "sDom": 'lfrtip',
        //dom: 'Bfrtip',
        //buttons: [
        //    {
        //        text: 'Nuovo Coniuge',
        //        className: 'green',
        //        action: function (e, dt, node, config) {
        //            NuovoConiuge();
        //        }
        //    }
        //],
        //"columnDefs": [
        //    {
        //        "targets": [0],
        //        "visible": false,
        //        "searchable": false
        //    },

        //]
    });

    function ElencoDocumenti(id, gruppoDoc, tipoDoc, idParentela, idMaggiorazioniFamiliari) {
        //debugger;
        var rotta = "/Documenti/ElencoDocumenti";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: {
                id: id, gruppoDocumento: gruppoDoc, tipoDoc: tipoDoc, parentela: idParentela, idMaggiorazioniFamiliari: idMaggiorazioniFamiliari
            },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //Blocca();

                //$('#DocModal').modal('show');
            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#divPassaporto").empty();
                $("#divPassaporto").html(result);
            },
            complete: function () {

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

    function AltriDatiFamiliariConiuge(idConiuge) {
        //debugger;
        var rotta = "/AltriDatiFamiliari/AltriDatiFamiliariConiugePassaporti";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idConiuge: idConiuge },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //$('#ModalPensione').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#divPassaporto").empty();
                $("#divPassaporto").html(result);

            },
            complete: function () {

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

    function AltriDatiFamiliariFiglio(idFiglio) {
        //debugger;
        var rotta = "/AltriDatiFamiliari/AltriDatiFamiliariFiglioPassaporto";

        $.ajax({
            url: rotta,
            type: "POST", //Le info testuali saranno passate in POST
            data: { idFiglio: idFiglio },
            dataType: 'html',
            async: false,
            beforeSend: function () {
                //debugger;
                VerificaAutenticazione();
                //$('#ModalPensione').modal('show');
                //Blocca();

            },
            success: function (result) {
                //debugger;
                //$("#viewPensione").empty();
                //$("#viewPensione").html(result);
                $("#divPassaporto").empty();
                $("#divPassaporto").html(result);

            },
            complete: function () {

            },
            error: function (error) {
                //debugger;
                //Sblocca();
                var msg = error.responseText;
                ErroreElaborazioneAjax(msg);
            }
        });

    }

</script>